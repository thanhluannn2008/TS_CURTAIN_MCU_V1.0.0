
TS_CURTAIN_MCU_V1.0.0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001098  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000030  0800122c  0800122c  0001122c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800125c  0800125c  00020014  2**0
                  CONTENTS
  4 .ARM          00000000  0800125c  0800125c  00020014  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800125c  0800125c  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800125c  0800125c  0001125c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001260  08001260  00011260  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000014  20000000  08001264  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000044  20000014  08001278  00020014  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000058  08001278  00020058  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020014  2**0
                  CONTENTS, READONLY
 12 .debug_info   000033bb  00000000  00000000  00020044  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000ca4  00000000  00000000  000233ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000408  00000000  00000000  000240a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000390  00000000  00000000  000244b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000c75b  00000000  00000000  00024840  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002dd7  00000000  00000000  00030f9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003e0b7  00000000  00000000  00033d72  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000cb  00000000  00000000  00071e29  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ff4  00000000  00000000  00071ef4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000014 	.word	0x20000014
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08001214 	.word	0x08001214

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000018 	.word	0x20000018
 80001d0:	08001214 	.word	0x08001214

080001d4 <NVIC_SetPriority>:

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	6039      	str	r1, [r7, #0]
 80001de:	71fb      	strb	r3, [r7, #7]
  if((int32_t)IRQn < 0) {
 80001e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001e4:	2b00      	cmp	r3, #0
 80001e6:	da0b      	bge.n	8000200 <NVIC_SetPriority+0x2c>
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80001e8:	683b      	ldr	r3, [r7, #0]
 80001ea:	b2da      	uxtb	r2, r3
 80001ec:	490c      	ldr	r1, [pc, #48]	; (8000220 <NVIC_SetPriority+0x4c>)
 80001ee:	79fb      	ldrb	r3, [r7, #7]
 80001f0:	f003 030f 	and.w	r3, r3, #15
 80001f4:	3b04      	subs	r3, #4
 80001f6:	0112      	lsls	r2, r2, #4
 80001f8:	b2d2      	uxtb	r2, r2
 80001fa:	440b      	add	r3, r1
 80001fc:	761a      	strb	r2, [r3, #24]
  }
  else {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80001fe:	e009      	b.n	8000214 <NVIC_SetPriority+0x40>
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000200:	683b      	ldr	r3, [r7, #0]
 8000202:	b2da      	uxtb	r2, r3
 8000204:	4907      	ldr	r1, [pc, #28]	; (8000224 <NVIC_SetPriority+0x50>)
 8000206:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800020a:	0112      	lsls	r2, r2, #4
 800020c:	b2d2      	uxtb	r2, r2
 800020e:	440b      	add	r3, r1
 8000210:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8000214:	bf00      	nop
 8000216:	370c      	adds	r7, #12
 8000218:	46bd      	mov	sp, r7
 800021a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800021e:	4770      	bx	lr
 8000220:	e000ed00 	.word	0xe000ed00
 8000224:	e000e100 	.word	0xe000e100

08000228 <SysTick_Config>:
    function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8000228:	b580      	push	{r7, lr}
 800022a:	b082      	sub	sp, #8
 800022c:	af00      	add	r7, sp, #0
 800022e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */
 8000230:	687b      	ldr	r3, [r7, #4]
 8000232:	3b01      	subs	r3, #1
 8000234:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000238:	d301      	bcc.n	800023e <SysTick_Config+0x16>
 800023a:	2301      	movs	r3, #1
 800023c:	e00f      	b.n	800025e <SysTick_Config+0x36>

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800023e:	4a0a      	ldr	r2, [pc, #40]	; (8000268 <SysTick_Config+0x40>)
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	3b01      	subs	r3, #1
 8000244:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8000246:	210f      	movs	r1, #15
 8000248:	f04f 30ff 	mov.w	r0, #4294967295
 800024c:	f7ff ffc2 	bl	80001d4 <NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000250:	4b05      	ldr	r3, [pc, #20]	; (8000268 <SysTick_Config+0x40>)
 8000252:	2200      	movs	r2, #0
 8000254:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000256:	4b04      	ldr	r3, [pc, #16]	; (8000268 <SysTick_Config+0x40>)
 8000258:	2207      	movs	r2, #7
 800025a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800025c:	2300      	movs	r3, #0
}
 800025e:	4618      	mov	r0, r3
 8000260:	3708      	adds	r7, #8
 8000262:	46bd      	mov	sp, r7
 8000264:	bd80      	pop	{r7, pc}
 8000266:	bf00      	nop
 8000268:	e000e010 	.word	0xe000e010

0800026c <delay>:
 * @param	[ms] time delay (mili secs)
 *
 * @retval 	none
 */
void delay(uint32_t ms)
{
 800026c:	b580      	push	{r7, lr}
 800026e:	b084      	sub	sp, #16
 8000270:	af00      	add	r7, sp, #0
 8000272:	6078      	str	r0, [r7, #4]
	uint32_t timeInit;
	timeInit = miliSecs;
 8000274:	4b09      	ldr	r3, [pc, #36]	; (800029c <delay+0x30>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	60fb      	str	r3, [r7, #12]
	while(CalculatorTime(timeInit,miliSecs)<=ms)
 800027a:	bf00      	nop
 800027c:	4b07      	ldr	r3, [pc, #28]	; (800029c <delay+0x30>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	4619      	mov	r1, r3
 8000282:	68f8      	ldr	r0, [r7, #12]
 8000284:	f000 fa6a 	bl	800075c <CalculatorTime>
 8000288:	4602      	mov	r2, r0
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	4293      	cmp	r3, r2
 800028e:	d2f5      	bcs.n	800027c <delay+0x10>
	{

	}
}
 8000290:	bf00      	nop
 8000292:	bf00      	nop
 8000294:	3710      	adds	r7, #16
 8000296:	46bd      	mov	sp, r7
 8000298:	bd80      	pop	{r7, pc}
 800029a:	bf00      	nop
 800029c:	20000048 	.word	0x20000048

080002a0 <LedBuzz_Init>:
 * @param	none
 *
 * @retval 	none
 */
void LedBuzz_Init(void)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b090      	sub	sp, #64	; 0x40
 80002a4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_Led_BLUE_KIT1_InitStructure;

	GPIO_InitTypeDef GPIO_Buzz_InitStructure;

	//Enable clock peripheral----------------------------------------------------------------------------------------------------------------
	RCC_AHB1PeriphClockCmd(GPIOA_SetClock, ENABLE);
 80002a6:	2101      	movs	r1, #1
 80002a8:	2001      	movs	r0, #1
 80002aa:	f000 ff0d 	bl	80010c8 <RCC_AHB1PeriphClockCmd>
	RCC_AHB1PeriphClockCmd(GPIOB_SetClock, ENABLE);
 80002ae:	2101      	movs	r1, #1
 80002b0:	2002      	movs	r0, #2
 80002b2:	f000 ff09 	bl	80010c8 <RCC_AHB1PeriphClockCmd>
	RCC_AHB1PeriphClockCmd(GPIOC_SetClock, ENABLE);
 80002b6:	2101      	movs	r1, #1
 80002b8:	2004      	movs	r0, #4
 80002ba:	f000 ff05 	bl	80010c8 <RCC_AHB1PeriphClockCmd>

	//GPIO_Led_Board-----------------------------------------------------------------------------------------------------------------------------
	GPIO_Led_Board_InitStructure.GPIO_Pin = LED_BOARD_GPIO_PIN;
 80002be:	2320      	movs	r3, #32
 80002c0:	63bb      	str	r3, [r7, #56]	; 0x38
	GPIO_Led_Board_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80002c2:	2301      	movs	r3, #1
 80002c4:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
	GPIO_Led_Board_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80002c8:	2302      	movs	r3, #2
 80002ca:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
	GPIO_Led_Board_InitStructure.GPIO_OType = GPIO_OType_PP;
 80002ce:	2300      	movs	r3, #0
 80002d0:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
	GPIO_Led_Board_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 80002d4:	2302      	movs	r3, #2
 80002d6:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f

	//GPIO_Led_RED_KIT0-----------------------------------------------------------------------------------------------------------------------------
	GPIO_Led_RED_KIT0_InitStructure.GPIO_Pin = LED_RED_KIT0_GPIO_PIN;
 80002da:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80002de:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_Led_RED_KIT0_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80002e0:	2301      	movs	r3, #1
 80002e2:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
	GPIO_Led_RED_KIT0_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80002e6:	2302      	movs	r3, #2
 80002e8:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
	GPIO_Led_RED_KIT0_InitStructure.GPIO_OType = GPIO_OType_PP;
 80002ec:	2300      	movs	r3, #0
 80002ee:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
	GPIO_Led_RED_KIT0_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 80002f2:	2302      	movs	r3, #2
 80002f4:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

	//GPIO_Led_GREEN_KIT0------------------------------------------------------------------------------------------------------------------------------
	GPIO_Led_GREEN_KIT0_InitStructure.GPIO_Pin = LED_GREEN_KIT0_GPIO_PIN;
 80002f8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80002fc:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_Led_GREEN_KIT0_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80002fe:	2301      	movs	r3, #1
 8000300:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
	GPIO_Led_GREEN_KIT0_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000304:	2302      	movs	r3, #2
 8000306:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
	GPIO_Led_GREEN_KIT0_InitStructure.GPIO_OType = GPIO_OType_PP;
 800030a:	2300      	movs	r3, #0
 800030c:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
	GPIO_Led_GREEN_KIT0_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000310:	2302      	movs	r3, #2
 8000312:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f

	//GPIO_Led_BLUE_KIT0------------------------------------------------------------------------------------------------------------------------------
	GPIO_Led_BLUE_KIT0_InitStructure.GPIO_Pin = LED_BLUE_KIT0_GPIO_PIN;
 8000316:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800031a:	623b      	str	r3, [r7, #32]
	GPIO_Led_BLUE_KIT0_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 800031c:	2301      	movs	r3, #1
 800031e:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	GPIO_Led_BLUE_KIT0_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000322:	2302      	movs	r3, #2
 8000324:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
	GPIO_Led_BLUE_KIT0_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000328:	2300      	movs	r3, #0
 800032a:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	GPIO_Led_BLUE_KIT0_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 800032e:	2302      	movs	r3, #2
 8000330:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

/*------------------------------------------------------------------------------------------------------------------------------------------------------*/

	//GPIO_Led_RED_KIT1------------------------------------------------------------------------------------------------------------------------------
	GPIO_Led_RED_KIT1_InitStructure.GPIO_Pin = LED_RED_KIT1_GPIO_PIN;
 8000334:	2302      	movs	r3, #2
 8000336:	61bb      	str	r3, [r7, #24]
	GPIO_Led_RED_KIT1_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000338:	2301      	movs	r3, #1
 800033a:	773b      	strb	r3, [r7, #28]
	GPIO_Led_RED_KIT1_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800033c:	2302      	movs	r3, #2
 800033e:	777b      	strb	r3, [r7, #29]
	GPIO_Led_RED_KIT1_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000340:	2300      	movs	r3, #0
 8000342:	77bb      	strb	r3, [r7, #30]
	GPIO_Led_RED_KIT1_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000344:	2302      	movs	r3, #2
 8000346:	77fb      	strb	r3, [r7, #31]

	//GPIO_Led_GREEN_KIT1------------------------------------------------------------------------------------------------------------------------------
	GPIO_Led_GREEN_KIT1_InitStructure.GPIO_Pin = LED_GREEN_KIT1_GPIO_PIN;
 8000348:	2301      	movs	r3, #1
 800034a:	613b      	str	r3, [r7, #16]
	GPIO_Led_GREEN_KIT1_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 800034c:	2301      	movs	r3, #1
 800034e:	753b      	strb	r3, [r7, #20]
	GPIO_Led_GREEN_KIT1_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000350:	2302      	movs	r3, #2
 8000352:	757b      	strb	r3, [r7, #21]
	GPIO_Led_GREEN_KIT1_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000354:	2300      	movs	r3, #0
 8000356:	75bb      	strb	r3, [r7, #22]
	GPIO_Led_GREEN_KIT1_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000358:	2302      	movs	r3, #2
 800035a:	75fb      	strb	r3, [r7, #23]

	//GPIO_Led_BLUE_KIT1------------------------------------------------------------------------------------------------------------------------------
	GPIO_Led_BLUE_KIT1_InitStructure.GPIO_Pin = LED_BLUE_KIT1_GPIO_PIN;
 800035c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000360:	60bb      	str	r3, [r7, #8]
	GPIO_Led_BLUE_KIT1_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000362:	2301      	movs	r3, #1
 8000364:	733b      	strb	r3, [r7, #12]
	GPIO_Led_BLUE_KIT1_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000366:	2302      	movs	r3, #2
 8000368:	737b      	strb	r3, [r7, #13]
	GPIO_Led_BLUE_KIT1_InitStructure.GPIO_OType = GPIO_OType_PP;
 800036a:	2300      	movs	r3, #0
 800036c:	73bb      	strb	r3, [r7, #14]
	GPIO_Led_BLUE_KIT1_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 800036e:	2302      	movs	r3, #2
 8000370:	73fb      	strb	r3, [r7, #15]

	/*------------------------------------------------------------------------------------------------------------------------------------------------------*/

	//GPIO_Buzz----------------------------------------------------------------------------------------------------------------------------------
	GPIO_Buzz_InitStructure.GPIO_Pin = BUZZER_GPIO_PIN;
 8000372:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000376:	603b      	str	r3, [r7, #0]
	GPIO_Buzz_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000378:	2301      	movs	r3, #1
 800037a:	713b      	strb	r3, [r7, #4]
	GPIO_Buzz_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800037c:	2302      	movs	r3, #2
 800037e:	717b      	strb	r3, [r7, #5]
	GPIO_Buzz_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000380:	2300      	movs	r3, #0
 8000382:	71bb      	strb	r3, [r7, #6]
	GPIO_Buzz_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000384:	2302      	movs	r3, #2
 8000386:	71fb      	strb	r3, [r7, #7]

	//The function initializes all of the above values-------------------------------------------------------------------------------------------
	GPIO_Init(LED_BOARD_GPIO_PORT, &GPIO_Led_Board_InitStructure);
 8000388:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800038c:	4619      	mov	r1, r3
 800038e:	4818      	ldr	r0, [pc, #96]	; (80003f0 <LedBuzz_Init+0x150>)
 8000390:	f000 fdbc 	bl	8000f0c <GPIO_Init>

	GPIO_Init(LED_RED_KIT0_GPIO_PORT, &GPIO_Led_RED_KIT0_InitStructure);//red0
 8000394:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8000398:	4619      	mov	r1, r3
 800039a:	4816      	ldr	r0, [pc, #88]	; (80003f4 <LedBuzz_Init+0x154>)
 800039c:	f000 fdb6 	bl	8000f0c <GPIO_Init>
	GPIO_Init(LED_GREEN_KIT0_GPIO_PORT, &GPIO_Led_GREEN_KIT0_InitStructure);//green0
 80003a0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80003a4:	4619      	mov	r1, r3
 80003a6:	4812      	ldr	r0, [pc, #72]	; (80003f0 <LedBuzz_Init+0x150>)
 80003a8:	f000 fdb0 	bl	8000f0c <GPIO_Init>
	GPIO_Init(LED_BLUE_KIT0_GPIO_PORT, &GPIO_Led_BLUE_KIT0_InitStructure);//blue0
 80003ac:	f107 0320 	add.w	r3, r7, #32
 80003b0:	4619      	mov	r1, r3
 80003b2:	480f      	ldr	r0, [pc, #60]	; (80003f0 <LedBuzz_Init+0x150>)
 80003b4:	f000 fdaa 	bl	8000f0c <GPIO_Init>

	GPIO_Init(LED_RED_KIT1_GPIO_PORT, &GPIO_Led_RED_KIT1_InitStructure);//red1
 80003b8:	f107 0318 	add.w	r3, r7, #24
 80003bc:	4619      	mov	r1, r3
 80003be:	480c      	ldr	r0, [pc, #48]	; (80003f0 <LedBuzz_Init+0x150>)
 80003c0:	f000 fda4 	bl	8000f0c <GPIO_Init>
	GPIO_Init(LED_GREEN_KIT1_GPIO_PORT, &GPIO_Led_GREEN_KIT1_InitStructure);//green1
 80003c4:	f107 0310 	add.w	r3, r7, #16
 80003c8:	4619      	mov	r1, r3
 80003ca:	4809      	ldr	r0, [pc, #36]	; (80003f0 <LedBuzz_Init+0x150>)
 80003cc:	f000 fd9e 	bl	8000f0c <GPIO_Init>
	GPIO_Init(LED_BLUE_KIT1_GPIO_PORT, &GPIO_Led_BLUE_KIT1_InitStructure);//blue1
 80003d0:	f107 0308 	add.w	r3, r7, #8
 80003d4:	4619      	mov	r1, r3
 80003d6:	4808      	ldr	r0, [pc, #32]	; (80003f8 <LedBuzz_Init+0x158>)
 80003d8:	f000 fd98 	bl	8000f0c <GPIO_Init>

	GPIO_Init(BUZZER_GPIO_PORT, &GPIO_Buzz_InitStructure);
 80003dc:	463b      	mov	r3, r7
 80003de:	4619      	mov	r1, r3
 80003e0:	4805      	ldr	r0, [pc, #20]	; (80003f8 <LedBuzz_Init+0x158>)
 80003e2:	f000 fd93 	bl	8000f0c <GPIO_Init>
}
 80003e6:	bf00      	nop
 80003e8:	3740      	adds	r7, #64	; 0x40
 80003ea:	46bd      	mov	sp, r7
 80003ec:	bd80      	pop	{r7, pc}
 80003ee:	bf00      	nop
 80003f0:	40020000 	.word	0x40020000
 80003f4:	40020400 	.word	0x40020400
 80003f8:	40020800 	.word	0x40020800

080003fc <Button_Init>:
 * @param	none
 *
 * @retval 	none
 */
void Button_Init(void)
{
 80003fc:	b580      	push	{r7, lr}
 80003fe:	b090      	sub	sp, #64	; 0x40
 8000400:	af00      	add	r7, sp, #0
	NVIC_InitTypeDef B2_NVIC_EXTI3_InitStructure;//B2
	NVIC_InitTypeDef B3_NVIC_EXTI4_InitStructure;//B3
	NVIC_InitTypeDef B4_NVIC_EXTI0_InitStructure;//B4

	//Button_B2----------------------------------------------------------------------------------------------------------------------------------
	RCC_AHB1PeriphClockCmd(GPIOB_SetClock, ENABLE);
 8000402:	2101      	movs	r1, #1
 8000404:	2002      	movs	r0, #2
 8000406:	f000 fe5f 	bl	80010c8 <RCC_AHB1PeriphClockCmd>
	GPIO_B2_InitStructure.GPIO_Pin = BUTTON_B2_GPIO_PIN;
 800040a:	2308      	movs	r3, #8
 800040c:	63bb      	str	r3, [r7, #56]	; 0x38
	GPIO_B2_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 800040e:	2300      	movs	r3, #0
 8000410:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
	GPIO_B2_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000414:	2302      	movs	r3, #2
 8000416:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
	GPIO_B2_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 800041a:	2301      	movs	r3, #1
 800041c:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f

	//Button_B3----------------------------------------------------------------------------------------------------------------------------------
	//RCC_AHB1PeriphClockCmd(GPIOA_SetClock, ENABLE);
	GPIO_B3_InitStructure.GPIO_Pin = BUTTON_B3_GPIO_PIN;
 8000420:	2310      	movs	r3, #16
 8000422:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_B3_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000424:	2300      	movs	r3, #0
 8000426:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
	GPIO_B3_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800042a:	2302      	movs	r3, #2
 800042c:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
	GPIO_B3_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000430:	2301      	movs	r3, #1
 8000432:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37

	//Button_B4----------------------------------------------------------------------------------------------------------------------------------
	GPIO_B4_InitStructure.GPIO_Pin = BUTTON_B4_GPIO_PIN;
 8000436:	2301      	movs	r3, #1
 8000438:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_B4_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 800043a:	2300      	movs	r3, #0
 800043c:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
	GPIO_B4_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000440:	2302      	movs	r3, #2
 8000442:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
	GPIO_B4_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000446:	2301      	movs	r3, #1
 8000448:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f

	//The function initializes all of the above values-------------------------------------------------------------------------------------------
	GPIO_Init(BUTTON_B2_GPIO_PORT, &GPIO_B2_InitStructure);
 800044c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000450:	4619      	mov	r1, r3
 8000452:	483a      	ldr	r0, [pc, #232]	; (800053c <Button_Init+0x140>)
 8000454:	f000 fd5a 	bl	8000f0c <GPIO_Init>
	GPIO_Init(BUTTON_B3_GPIO_PORT, &GPIO_B3_InitStructure);
 8000458:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800045c:	4619      	mov	r1, r3
 800045e:	4838      	ldr	r0, [pc, #224]	; (8000540 <Button_Init+0x144>)
 8000460:	f000 fd54 	bl	8000f0c <GPIO_Init>
	GPIO_Init(BUTTON_B4_GPIO_PORT, &GPIO_B4_InitStructure);
 8000464:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000468:	4619      	mov	r1, r3
 800046a:	4834      	ldr	r0, [pc, #208]	; (800053c <Button_Init+0x140>)
 800046c:	f000 fd4e 	bl	8000f0c <GPIO_Init>

	//Interrupts---------------------------------------------------------------------------------------------------------------------------------

	//Cấp clock cho ngoại vi Syscfg.
	RCC_APB2PeriphClockCmd(SYSCFG_SetClock,ENABLE);
 8000470:	2101      	movs	r1, #1
 8000472:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8000476:	f000 fe47 	bl	8001108 <RCC_APB2PeriphClockCmd>
	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOB,EXTI_PinSource3);//B2
 800047a:	2103      	movs	r1, #3
 800047c:	2001      	movs	r0, #1
 800047e:	f000 fe63 	bl	8001148 <SYSCFG_EXTILineConfig>
	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA,EXTI_PinSource4);//B3
 8000482:	2104      	movs	r1, #4
 8000484:	2000      	movs	r0, #0
 8000486:	f000 fe5f 	bl	8001148 <SYSCFG_EXTILineConfig>
	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOB,EXTI_PinSource0);//B4
 800048a:	2100      	movs	r1, #0
 800048c:	2001      	movs	r0, #1
 800048e:	f000 fe5b 	bl	8001148 <SYSCFG_EXTILineConfig>

	//Configure EXTI Line
	B3_EXTI_Line4_InitStructure.EXTI_Line = EXTI_Line4;
 8000492:	2310      	movs	r3, #16
 8000494:	61bb      	str	r3, [r7, #24]
	B3_EXTI_Line4_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 8000496:	2300      	movs	r3, #0
 8000498:	773b      	strb	r3, [r7, #28]
	B3_EXTI_Line4_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
 800049a:	230c      	movs	r3, #12
 800049c:	777b      	strb	r3, [r7, #29]
	B3_EXTI_Line4_InitStructure.EXTI_LineCmd = ENABLE;
 800049e:	2301      	movs	r3, #1
 80004a0:	77bb      	strb	r3, [r7, #30]
	EXTI_Init(&B3_EXTI_Line4_InitStructure);
 80004a2:	f107 0318 	add.w	r3, r7, #24
 80004a6:	4618      	mov	r0, r3
 80004a8:	f000 fc94 	bl	8000dd4 <EXTI_Init>

	B2_EXTI_Line3_InitStructure.EXTI_Line = EXTI_Line3;
 80004ac:	2308      	movs	r3, #8
 80004ae:	623b      	str	r3, [r7, #32]
	B2_EXTI_Line3_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 80004b0:	2300      	movs	r3, #0
 80004b2:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	B2_EXTI_Line3_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
 80004b6:	230c      	movs	r3, #12
 80004b8:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
	B2_EXTI_Line3_InitStructure.EXTI_LineCmd = ENABLE;
 80004bc:	2301      	movs	r3, #1
 80004be:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	EXTI_Init(&B2_EXTI_Line3_InitStructure);
 80004c2:	f107 0320 	add.w	r3, r7, #32
 80004c6:	4618      	mov	r0, r3
 80004c8:	f000 fc84 	bl	8000dd4 <EXTI_Init>

	B4_EXTI_Line0_InitStructure.EXTI_Line = EXTI_Line0;
 80004cc:	2301      	movs	r3, #1
 80004ce:	613b      	str	r3, [r7, #16]
	B4_EXTI_Line0_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 80004d0:	2300      	movs	r3, #0
 80004d2:	753b      	strb	r3, [r7, #20]
	B4_EXTI_Line0_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
 80004d4:	230c      	movs	r3, #12
 80004d6:	757b      	strb	r3, [r7, #21]
	B4_EXTI_Line0_InitStructure.EXTI_LineCmd = ENABLE;
 80004d8:	2301      	movs	r3, #1
 80004da:	75bb      	strb	r3, [r7, #22]
	EXTI_Init(&B4_EXTI_Line0_InitStructure);
 80004dc:	f107 0310 	add.w	r3, r7, #16
 80004e0:	4618      	mov	r0, r3
 80004e2:	f000 fc77 	bl	8000dd4 <EXTI_Init>

	//Enable and set EXTI Line4 Interrupt to the lowest priority
	B3_NVIC_EXTI4_InitStructure.NVIC_IRQChannel = EXTI4_IRQn;
 80004e6:	230a      	movs	r3, #10
 80004e8:	723b      	strb	r3, [r7, #8]
	B3_NVIC_EXTI4_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80004ea:	2300      	movs	r3, #0
 80004ec:	727b      	strb	r3, [r7, #9]
	B3_NVIC_EXTI4_InitStructure.NVIC_IRQChannelSubPriority = 0;
 80004ee:	2300      	movs	r3, #0
 80004f0:	72bb      	strb	r3, [r7, #10]
	B3_NVIC_EXTI4_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 80004f2:	2301      	movs	r3, #1
 80004f4:	72fb      	strb	r3, [r7, #11]

	//Enable and set EXTI Line3 Interrupt to the lowest priority
	B2_NVIC_EXTI3_InitStructure.NVIC_IRQChannel = EXTI3_IRQn;
 80004f6:	2309      	movs	r3, #9
 80004f8:	733b      	strb	r3, [r7, #12]
	B2_NVIC_EXTI3_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
 80004fa:	2301      	movs	r3, #1
 80004fc:	737b      	strb	r3, [r7, #13]
	B2_NVIC_EXTI3_InitStructure.NVIC_IRQChannelSubPriority = 0;
 80004fe:	2300      	movs	r3, #0
 8000500:	73bb      	strb	r3, [r7, #14]
	B2_NVIC_EXTI3_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8000502:	2301      	movs	r3, #1
 8000504:	73fb      	strb	r3, [r7, #15]

	//Enable and set EXTI Line0 Interrupt to the lowest priority
	B4_NVIC_EXTI0_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;
 8000506:	2306      	movs	r3, #6
 8000508:	713b      	strb	r3, [r7, #4]
	B4_NVIC_EXTI0_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
 800050a:	2302      	movs	r3, #2
 800050c:	717b      	strb	r3, [r7, #5]
	B4_NVIC_EXTI0_InitStructure.NVIC_IRQChannelSubPriority = 0;
 800050e:	2300      	movs	r3, #0
 8000510:	71bb      	strb	r3, [r7, #6]
	B4_NVIC_EXTI0_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8000512:	2301      	movs	r3, #1
 8000514:	71fb      	strb	r3, [r7, #7]

	NVIC_Init(&B3_NVIC_EXTI4_InitStructure);
 8000516:	f107 0308 	add.w	r3, r7, #8
 800051a:	4618      	mov	r0, r3
 800051c:	f000 fbf8 	bl	8000d10 <NVIC_Init>
	NVIC_Init(&B2_NVIC_EXTI3_InitStructure);
 8000520:	f107 030c 	add.w	r3, r7, #12
 8000524:	4618      	mov	r0, r3
 8000526:	f000 fbf3 	bl	8000d10 <NVIC_Init>
	NVIC_Init(&B4_NVIC_EXTI0_InitStructure);
 800052a:	1d3b      	adds	r3, r7, #4
 800052c:	4618      	mov	r0, r3
 800052e:	f000 fbef 	bl	8000d10 <NVIC_Init>
}
 8000532:	bf00      	nop
 8000534:	3740      	adds	r7, #64	; 0x40
 8000536:	46bd      	mov	sp, r7
 8000538:	bd80      	pop	{r7, pc}
 800053a:	bf00      	nop
 800053c:	40020400 	.word	0x40020400
 8000540:	40020000 	.word	0x40020000

08000544 <SysTick_Handler>:
 * @param	none
 *
 * @retval 	none
 */
void SysTick_Handler(void)
{
 8000544:	b480      	push	{r7}
 8000546:	af00      	add	r7, sp, #0
	miliSecs++;
 8000548:	4b04      	ldr	r3, [pc, #16]	; (800055c <SysTick_Handler+0x18>)
 800054a:	681b      	ldr	r3, [r3, #0]
 800054c:	3301      	adds	r3, #1
 800054e:	4a03      	ldr	r2, [pc, #12]	; (800055c <SysTick_Handler+0x18>)
 8000550:	6013      	str	r3, [r2, #0]
}
 8000552:	bf00      	nop
 8000554:	46bd      	mov	sp, r7
 8000556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800055a:	4770      	bx	lr
 800055c:	20000048 	.word	0x20000048

08000560 <EXTI4_IRQHandler>:
 * @param	none
 *
 * @retval 	none
 */
void EXTI4_IRQHandler(void)
{
 8000560:	b580      	push	{r7, lr}
 8000562:	af00      	add	r7, sp, #0
	if(EXTI_GetFlagStatus(EXTI_Line4)==SET)
 8000564:	2010      	movs	r0, #16
 8000566:	f000 fca7 	bl	8000eb8 <EXTI_GetFlagStatus>
 800056a:	4603      	mov	r3, r0
 800056c:	2b01      	cmp	r3, #1
 800056e:	d109      	bne.n	8000584 <EXTI4_IRQHandler+0x24>
	{
		B3Cnt++;
 8000570:	4b07      	ldr	r3, [pc, #28]	; (8000590 <EXTI4_IRQHandler+0x30>)
 8000572:	781b      	ldrb	r3, [r3, #0]
 8000574:	3301      	adds	r3, #1
 8000576:	b2da      	uxtb	r2, r3
 8000578:	4b05      	ldr	r3, [pc, #20]	; (8000590 <EXTI4_IRQHandler+0x30>)
 800057a:	701a      	strb	r2, [r3, #0]
		B3time=miliSecs;
 800057c:	4b05      	ldr	r3, [pc, #20]	; (8000594 <EXTI4_IRQHandler+0x34>)
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	4a05      	ldr	r2, [pc, #20]	; (8000598 <EXTI4_IRQHandler+0x38>)
 8000582:	6013      	str	r3, [r2, #0]
	}
	EXTI_ClearITPendingBit(EXTI_Line4);
 8000584:	2010      	movs	r0, #16
 8000586:	f000 fcb1 	bl	8000eec <EXTI_ClearITPendingBit>
}
 800058a:	bf00      	nop
 800058c:	bd80      	pop	{r7, pc}
 800058e:	bf00      	nop
 8000590:	20000030 	.word	0x20000030
 8000594:	20000048 	.word	0x20000048
 8000598:	20000034 	.word	0x20000034

0800059c <EXTI3_IRQHandler>:
 * @param	none
 *
 * @retval 	none
 */
void EXTI3_IRQHandler(void)
{
 800059c:	b580      	push	{r7, lr}
 800059e:	af00      	add	r7, sp, #0
	if(EXTI_GetFlagStatus(EXTI_Line3)==SET)
 80005a0:	2008      	movs	r0, #8
 80005a2:	f000 fc89 	bl	8000eb8 <EXTI_GetFlagStatus>
 80005a6:	4603      	mov	r3, r0
 80005a8:	2b01      	cmp	r3, #1
 80005aa:	d109      	bne.n	80005c0 <EXTI3_IRQHandler+0x24>
	{
		B2Cnt++;
 80005ac:	4b07      	ldr	r3, [pc, #28]	; (80005cc <EXTI3_IRQHandler+0x30>)
 80005ae:	781b      	ldrb	r3, [r3, #0]
 80005b0:	3301      	adds	r3, #1
 80005b2:	b2da      	uxtb	r2, r3
 80005b4:	4b05      	ldr	r3, [pc, #20]	; (80005cc <EXTI3_IRQHandler+0x30>)
 80005b6:	701a      	strb	r2, [r3, #0]
		B2time=miliSecs;
 80005b8:	4b05      	ldr	r3, [pc, #20]	; (80005d0 <EXTI3_IRQHandler+0x34>)
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	4a05      	ldr	r2, [pc, #20]	; (80005d4 <EXTI3_IRQHandler+0x38>)
 80005be:	6013      	str	r3, [r2, #0]
	}
	EXTI_ClearITPendingBit(EXTI_Line3);
 80005c0:	2008      	movs	r0, #8
 80005c2:	f000 fc93 	bl	8000eec <EXTI_ClearITPendingBit>
}
 80005c6:	bf00      	nop
 80005c8:	bd80      	pop	{r7, pc}
 80005ca:	bf00      	nop
 80005cc:	20000038 	.word	0x20000038
 80005d0:	20000048 	.word	0x20000048
 80005d4:	2000003c 	.word	0x2000003c

080005d8 <EXTI0_IRQHandler>:
 * @param	none
 *
 * @retval 	none
 */
void EXTI0_IRQHandler(void)
{
 80005d8:	b580      	push	{r7, lr}
 80005da:	af00      	add	r7, sp, #0
	if(EXTI_GetFlagStatus(EXTI_Line0)==SET)
 80005dc:	2001      	movs	r0, #1
 80005de:	f000 fc6b 	bl	8000eb8 <EXTI_GetFlagStatus>
 80005e2:	4603      	mov	r3, r0
 80005e4:	2b01      	cmp	r3, #1
 80005e6:	d109      	bne.n	80005fc <EXTI0_IRQHandler+0x24>
	{
		B4Cnt++;
 80005e8:	4b07      	ldr	r3, [pc, #28]	; (8000608 <EXTI0_IRQHandler+0x30>)
 80005ea:	781b      	ldrb	r3, [r3, #0]
 80005ec:	3301      	adds	r3, #1
 80005ee:	b2da      	uxtb	r2, r3
 80005f0:	4b05      	ldr	r3, [pc, #20]	; (8000608 <EXTI0_IRQHandler+0x30>)
 80005f2:	701a      	strb	r2, [r3, #0]
		B4time=miliSecs;
 80005f4:	4b05      	ldr	r3, [pc, #20]	; (800060c <EXTI0_IRQHandler+0x34>)
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	4a05      	ldr	r2, [pc, #20]	; (8000610 <EXTI0_IRQHandler+0x38>)
 80005fa:	6013      	str	r3, [r2, #0]
	}
	EXTI_ClearITPendingBit(EXTI_Line0);
 80005fc:	2001      	movs	r0, #1
 80005fe:	f000 fc75 	bl	8000eec <EXTI_ClearITPendingBit>
}
 8000602:	bf00      	nop
 8000604:	bd80      	pop	{r7, pc}
 8000606:	bf00      	nop
 8000608:	20000040 	.word	0x20000040
 800060c:	20000048 	.word	0x20000048
 8000610:	20000044 	.word	0x20000044

08000614 <LedControl_SetState1>:
//Cách 1 ( tạo mảng )
typedef struct LedGpio{
	GPIO_TypeDef* port;
	uint16_t pinMask;
}LedGpio_t;
void LedControl_SetState1(uint8_t led_id,uint8_t led_color,uint8_t led_state){
 8000614:	b5b0      	push	{r4, r5, r7, lr}
 8000616:	b08e      	sub	sp, #56	; 0x38
 8000618:	af00      	add	r7, sp, #0
 800061a:	4603      	mov	r3, r0
 800061c:	71fb      	strb	r3, [r7, #7]
 800061e:	460b      	mov	r3, r1
 8000620:	71bb      	strb	r3, [r7, #6]
 8000622:	4613      	mov	r3, r2
 8000624:	717b      	strb	r3, [r7, #5]
	LedGpio_t LedArr0[] =
 8000626:	4b38      	ldr	r3, [pc, #224]	; (8000708 <LedControl_SetState1+0xf4>)
 8000628:	f107 0420 	add.w	r4, r7, #32
 800062c:	461d      	mov	r5, r3
 800062e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000630:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000632:	e895 0003 	ldmia.w	r5, {r0, r1}
 8000636:	e884 0003 	stmia.w	r4, {r0, r1}
	{
			{.port = LED_RED_KIT0_GPIO_PORT, .pinMask = LED_RED_KIT0_GPIO_PIN},
			{.port = LED_GREEN_KIT0_GPIO_PORT, .pinMask = LED_GREEN_KIT0_GPIO_PIN},
			{.port = LED_BLUE_KIT0_GPIO_PORT, .pinMask = LED_BLUE_KIT0_GPIO_PIN}
	};
	LedGpio_t LedArr1[] =
 800063a:	4b34      	ldr	r3, [pc, #208]	; (800070c <LedControl_SetState1+0xf8>)
 800063c:	f107 0408 	add.w	r4, r7, #8
 8000640:	461d      	mov	r5, r3
 8000642:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000644:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000646:	e895 0003 	ldmia.w	r5, {r0, r1}
 800064a:	e884 0003 	stmia.w	r4, {r0, r1}
	{
		{.port = LED_RED_KIT1_GPIO_PORT, .pinMask = LED_RED_KIT1_GPIO_PIN},
		{.port = LED_GREEN_KIT1_GPIO_PORT, .pinMask = LED_GREEN_KIT1_GPIO_PIN},
		{.port = LED_BLUE_KIT1_GPIO_PORT, .pinMask = LED_BLUE_KIT1_GPIO_PIN}
	};
	switch(led_id)
 800064e:	79fb      	ldrb	r3, [r7, #7]
 8000650:	2b03      	cmp	r3, #3
 8000652:	d855      	bhi.n	8000700 <LedControl_SetState1+0xec>
 8000654:	a201      	add	r2, pc, #4	; (adr r2, 800065c <LedControl_SetState1+0x48>)
 8000656:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800065a:	bf00      	nop
 800065c:	0800066d 	.word	0x0800066d
 8000660:	0800067b 	.word	0x0800067b
 8000664:	0800069d 	.word	0x0800069d
 8000668:	080006bf 	.word	0x080006bf
	{
	case 0:// LED BOARD
		GPIO_WriteBit(LED_BOARD_GPIO_PORT, LED_BOARD_GPIO_PIN, led_state);
 800066c:	797b      	ldrb	r3, [r7, #5]
 800066e:	461a      	mov	r2, r3
 8000670:	2120      	movs	r1, #32
 8000672:	4827      	ldr	r0, [pc, #156]	; (8000710 <LedControl_SetState1+0xfc>)
 8000674:	f000 fd10 	bl	8001098 <GPIO_WriteBit>
		break;
 8000678:	e042      	b.n	8000700 <LedControl_SetState1+0xec>

	case 1://LED KIT 0
		GPIO_WriteBit(LedArr0[led_color].port, LedArr0[led_color].pinMask, led_state);
 800067a:	79bb      	ldrb	r3, [r7, #6]
 800067c:	00db      	lsls	r3, r3, #3
 800067e:	3338      	adds	r3, #56	; 0x38
 8000680:	443b      	add	r3, r7
 8000682:	f853 0c18 	ldr.w	r0, [r3, #-24]
 8000686:	79bb      	ldrb	r3, [r7, #6]
 8000688:	00db      	lsls	r3, r3, #3
 800068a:	3338      	adds	r3, #56	; 0x38
 800068c:	443b      	add	r3, r7
 800068e:	f833 3c14 	ldrh.w	r3, [r3, #-20]
 8000692:	797a      	ldrb	r2, [r7, #5]
 8000694:	4619      	mov	r1, r3
 8000696:	f000 fcff 	bl	8001098 <GPIO_WriteBit>
		break;
 800069a:	e031      	b.n	8000700 <LedControl_SetState1+0xec>
	case 2://LED KIT 1
		GPIO_WriteBit(LedArr1[led_color].port, LedArr1[led_color].pinMask, led_state);
 800069c:	79bb      	ldrb	r3, [r7, #6]
 800069e:	00db      	lsls	r3, r3, #3
 80006a0:	3338      	adds	r3, #56	; 0x38
 80006a2:	443b      	add	r3, r7
 80006a4:	f853 0c30 	ldr.w	r0, [r3, #-48]
 80006a8:	79bb      	ldrb	r3, [r7, #6]
 80006aa:	00db      	lsls	r3, r3, #3
 80006ac:	3338      	adds	r3, #56	; 0x38
 80006ae:	443b      	add	r3, r7
 80006b0:	f833 3c2c 	ldrh.w	r3, [r3, #-44]
 80006b4:	797a      	ldrb	r2, [r7, #5]
 80006b6:	4619      	mov	r1, r3
 80006b8:	f000 fcee 	bl	8001098 <GPIO_WriteBit>
		break;
 80006bc:	e020      	b.n	8000700 <LedControl_SetState1+0xec>
	case 3://LED ALL
		GPIO_WriteBit(LedArr0[led_color].port, LedArr0[led_color].pinMask, led_state);
 80006be:	79bb      	ldrb	r3, [r7, #6]
 80006c0:	00db      	lsls	r3, r3, #3
 80006c2:	3338      	adds	r3, #56	; 0x38
 80006c4:	443b      	add	r3, r7
 80006c6:	f853 0c18 	ldr.w	r0, [r3, #-24]
 80006ca:	79bb      	ldrb	r3, [r7, #6]
 80006cc:	00db      	lsls	r3, r3, #3
 80006ce:	3338      	adds	r3, #56	; 0x38
 80006d0:	443b      	add	r3, r7
 80006d2:	f833 3c14 	ldrh.w	r3, [r3, #-20]
 80006d6:	797a      	ldrb	r2, [r7, #5]
 80006d8:	4619      	mov	r1, r3
 80006da:	f000 fcdd 	bl	8001098 <GPIO_WriteBit>
		GPIO_WriteBit(LedArr1[led_color].port, LedArr1[led_color].pinMask, led_state);
 80006de:	79bb      	ldrb	r3, [r7, #6]
 80006e0:	00db      	lsls	r3, r3, #3
 80006e2:	3338      	adds	r3, #56	; 0x38
 80006e4:	443b      	add	r3, r7
 80006e6:	f853 0c30 	ldr.w	r0, [r3, #-48]
 80006ea:	79bb      	ldrb	r3, [r7, #6]
 80006ec:	00db      	lsls	r3, r3, #3
 80006ee:	3338      	adds	r3, #56	; 0x38
 80006f0:	443b      	add	r3, r7
 80006f2:	f833 3c2c 	ldrh.w	r3, [r3, #-44]
 80006f6:	797a      	ldrb	r2, [r7, #5]
 80006f8:	4619      	mov	r1, r3
 80006fa:	f000 fccd 	bl	8001098 <GPIO_WriteBit>
		break;
 80006fe:	bf00      	nop
	}

}
 8000700:	bf00      	nop
 8000702:	3738      	adds	r7, #56	; 0x38
 8000704:	46bd      	mov	sp, r7
 8000706:	bdb0      	pop	{r4, r5, r7, pc}
 8000708:	0800122c 	.word	0x0800122c
 800070c:	08001244 	.word	0x08001244
 8000710:	40020000 	.word	0x40020000

08000714 <BuzzerControl_SetBeep>:
 * @param  none
 *
 * @retval none
 */
void BuzzerControl_SetBeep()
{
 8000714:	b580      	push	{r7, lr}
 8000716:	b082      	sub	sp, #8
 8000718:	af00      	add	r7, sp, #0
	for(int i = 0; i < 2; i ++){
 800071a:	2300      	movs	r3, #0
 800071c:	607b      	str	r3, [r7, #4]
 800071e:	e012      	b.n	8000746 <BuzzerControl_SetBeep+0x32>
		GPIO_SetBits(BUZZER_GPIO_PORT,BUZZER_GPIO_PIN);
 8000720:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000724:	480c      	ldr	r0, [pc, #48]	; (8000758 <BuzzerControl_SetBeep+0x44>)
 8000726:	f000 fc99 	bl	800105c <GPIO_SetBits>
		delay(100);
 800072a:	2064      	movs	r0, #100	; 0x64
 800072c:	f7ff fd9e 	bl	800026c <delay>
		GPIO_ResetBits(BUZZER_GPIO_PORT,BUZZER_GPIO_PIN);
 8000730:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000734:	4808      	ldr	r0, [pc, #32]	; (8000758 <BuzzerControl_SetBeep+0x44>)
 8000736:	f000 fca0 	bl	800107a <GPIO_ResetBits>
		delay(100);
 800073a:	2064      	movs	r0, #100	; 0x64
 800073c:	f7ff fd96 	bl	800026c <delay>
	for(int i = 0; i < 2; i ++){
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	3301      	adds	r3, #1
 8000744:	607b      	str	r3, [r7, #4]
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	2b01      	cmp	r3, #1
 800074a:	dde9      	ble.n	8000720 <BuzzerControl_SetBeep+0xc>
	}
}
 800074c:	bf00      	nop
 800074e:	bf00      	nop
 8000750:	3708      	adds	r7, #8
 8000752:	46bd      	mov	sp, r7
 8000754:	bd80      	pop	{r7, pc}
 8000756:	bf00      	nop
 8000758:	40020800 	.word	0x40020800

0800075c <CalculatorTime>:
 * @param  [dwTimeCurrent]: Stop point time
 *
 * @retval [uint32_t] : return duration time(ms)
 */
uint32_t CalculatorTime(uint32_t dwTimeInit, uint32_t dwTimeCurrent)
{
 800075c:	b480      	push	{r7}
 800075e:	b085      	sub	sp, #20
 8000760:	af00      	add	r7, sp, #0
 8000762:	6078      	str	r0, [r7, #4]
 8000764:	6039      	str	r1, [r7, #0]
	uint32_t dwTimeTotal;
	if(dwTimeCurrent >= dwTimeInit)
 8000766:	683a      	ldr	r2, [r7, #0]
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	429a      	cmp	r2, r3
 800076c:	d304      	bcc.n	8000778 <CalculatorTime+0x1c>
	{
		dwTimeTotal = dwTimeCurrent - dwTimeInit;
 800076e:	683a      	ldr	r2, [r7, #0]
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	1ad3      	subs	r3, r2, r3
 8000774:	60fb      	str	r3, [r7, #12]
 8000776:	e004      	b.n	8000782 <CalculatorTime+0x26>
	}
	else
	{
		dwTimeTotal = 0xFFFFFFFFU + dwTimeCurrent - dwTimeInit;
 8000778:	683a      	ldr	r2, [r7, #0]
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	1ad3      	subs	r3, r2, r3
 800077e:	3b01      	subs	r3, #1
 8000780:	60fb      	str	r3, [r7, #12]
	}
	return dwTimeTotal;
 8000782:	68fb      	ldr	r3, [r7, #12]
}
 8000784:	4618      	mov	r0, r3
 8000786:	3714      	adds	r7, #20
 8000788:	46bd      	mov	sp, r7
 800078a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800078e:	4770      	bx	lr

08000790 <Blinkled_StatusPower>:
 * @param  none
 *
 * @retval none
 */
void Blinkled_StatusPower()
{
 8000790:	b580      	push	{r7, lr}
 8000792:	b082      	sub	sp, #8
 8000794:	af00      	add	r7, sp, #0
	for(uint8_t i=0;i<4;i++)
 8000796:	2300      	movs	r3, #0
 8000798:	71fb      	strb	r3, [r7, #7]
 800079a:	e014      	b.n	80007c6 <Blinkled_StatusPower+0x36>
	{
		LedControl_SetState1(LED_BOARD_ID,LED_GREEN,STATE_ON);
 800079c:	2201      	movs	r2, #1
 800079e:	2101      	movs	r1, #1
 80007a0:	2000      	movs	r0, #0
 80007a2:	f7ff ff37 	bl	8000614 <LedControl_SetState1>
		delay(300);
 80007a6:	f44f 7096 	mov.w	r0, #300	; 0x12c
 80007aa:	f7ff fd5f 	bl	800026c <delay>
		LedControl_SetState1(LED_BOARD_ID,LED_GREEN,STATE_OFF);
 80007ae:	2200      	movs	r2, #0
 80007b0:	2101      	movs	r1, #1
 80007b2:	2000      	movs	r0, #0
 80007b4:	f7ff ff2e 	bl	8000614 <LedControl_SetState1>
		delay(300);
 80007b8:	f44f 7096 	mov.w	r0, #300	; 0x12c
 80007bc:	f7ff fd56 	bl	800026c <delay>
	for(uint8_t i=0;i<4;i++)
 80007c0:	79fb      	ldrb	r3, [r7, #7]
 80007c2:	3301      	adds	r3, #1
 80007c4:	71fb      	strb	r3, [r7, #7]
 80007c6:	79fb      	ldrb	r3, [r7, #7]
 80007c8:	2b03      	cmp	r3, #3
 80007ca:	d9e7      	bls.n	800079c <Blinkled_StatusPower+0xc>
	}

}
 80007cc:	bf00      	nop
 80007ce:	bf00      	nop
 80007d0:	3708      	adds	r7, #8
 80007d2:	46bd      	mov	sp, r7
 80007d4:	bd80      	pop	{r7, pc}

080007d6 <LedControl_SetStatus>:
 * @param  none
 *
 * @retval none
 */
void LedControl_SetStatus()
{
 80007d6:	b580      	push	{r7, lr}
 80007d8:	b082      	sub	sp, #8
 80007da:	af00      	add	r7, sp, #0
	for(int i = 0; i < 4; i++)
 80007dc:	2300      	movs	r3, #0
 80007de:	607b      	str	r3, [r7, #4]
 80007e0:	e016      	b.n	8000810 <LedControl_SetStatus+0x3a>
	{
		BuzzerControl_SetBeep();
 80007e2:	f7ff ff97 	bl	8000714 <BuzzerControl_SetBeep>

		LedControl_SetState1(LED_ALL_ID,LED_GREEN,STATE_ON);
 80007e6:	2201      	movs	r2, #1
 80007e8:	2101      	movs	r1, #1
 80007ea:	2003      	movs	r0, #3
 80007ec:	f7ff ff12 	bl	8000614 <LedControl_SetState1>
		delay(400);
 80007f0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80007f4:	f7ff fd3a 	bl	800026c <delay>
		LedControl_SetState1(LED_ALL_ID,LED_GREEN,STATE_OFF);
 80007f8:	2200      	movs	r2, #0
 80007fa:	2101      	movs	r1, #1
 80007fc:	2003      	movs	r0, #3
 80007fe:	f7ff ff09 	bl	8000614 <LedControl_SetState1>
		delay(400);
 8000802:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000806:	f7ff fd31 	bl	800026c <delay>
	for(int i = 0; i < 4; i++)
 800080a:	687b      	ldr	r3, [r7, #4]
 800080c:	3301      	adds	r3, #1
 800080e:	607b      	str	r3, [r7, #4]
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	2b03      	cmp	r3, #3
 8000814:	dde5      	ble.n	80007e2 <LedControl_SetStatus+0xc>
	}
}
 8000816:	bf00      	nop
 8000818:	bf00      	nop
 800081a:	3708      	adds	r7, #8
 800081c:	46bd      	mov	sp, r7
 800081e:	bd80      	pop	{r7, pc}

08000820 <btnB3Scan>:
 * @param  none
 *
 * @retval none
 */
void btnB3Scan()
{
 8000820:	b580      	push	{r7, lr}
 8000822:	af00      	add	r7, sp, #0
	if(B3Cnt==0) return;
 8000824:	4b22      	ldr	r3, [pc, #136]	; (80008b0 <btnB3Scan+0x90>)
 8000826:	781b      	ldrb	r3, [r3, #0]
 8000828:	2b00      	cmp	r3, #0
 800082a:	d03f      	beq.n	80008ac <btnB3Scan+0x8c>
	//giữ 500ms
	if(GPIO_ReadInputDataBit(BUTTON_B3_GPIO_PORT,BUTTON_B3_GPIO_PIN)==0)
 800082c:	2110      	movs	r1, #16
 800082e:	4821      	ldr	r0, [pc, #132]	; (80008b4 <btnB3Scan+0x94>)
 8000830:	f000 fbfa 	bl	8001028 <GPIO_ReadInputDataBit>
 8000834:	4603      	mov	r3, r0
 8000836:	2b00      	cmp	r3, #0
 8000838:	d10b      	bne.n	8000852 <btnB3Scan+0x32>
	{
		B3TimeRelease = 0;
 800083a:	4b1f      	ldr	r3, [pc, #124]	; (80008b8 <btnB3Scan+0x98>)
 800083c:	2200      	movs	r2, #0
 800083e:	601a      	str	r2, [r3, #0]
		if(CalculatorTime(B3time,miliSecs)==500)
 8000840:	4b1e      	ldr	r3, [pc, #120]	; (80008bc <btnB3Scan+0x9c>)
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	4a1e      	ldr	r2, [pc, #120]	; (80008c0 <btnB3Scan+0xa0>)
 8000846:	6812      	ldr	r2, [r2, #0]
 8000848:	4611      	mov	r1, r2
 800084a:	4618      	mov	r0, r3
 800084c:	f7ff ff86 	bl	800075c <CalculatorTime>
 8000850:	e02d      	b.n	80008ae <btnB3Scan+0x8e>
			//B3time=0;
		}
	}
	else
	{
		if( B3Cnt != 0)
 8000852:	4b17      	ldr	r3, [pc, #92]	; (80008b0 <btnB3Scan+0x90>)
 8000854:	781b      	ldrb	r3, [r3, #0]
 8000856:	2b00      	cmp	r3, #0
 8000858:	d029      	beq.n	80008ae <btnB3Scan+0x8e>
		{
			//Update release time in the first time release
			if(B3TimeRelease == 0)
 800085a:	4b17      	ldr	r3, [pc, #92]	; (80008b8 <btnB3Scan+0x98>)
 800085c:	681b      	ldr	r3, [r3, #0]
 800085e:	2b00      	cmp	r3, #0
 8000860:	d103      	bne.n	800086a <btnB3Scan+0x4a>
			{
				B3TimeRelease = miliSecs;
 8000862:	4b17      	ldr	r3, [pc, #92]	; (80008c0 <btnB3Scan+0xa0>)
 8000864:	681b      	ldr	r3, [r3, #0]
 8000866:	4a14      	ldr	r2, [pc, #80]	; (80008b8 <btnB3Scan+0x98>)
 8000868:	6013      	str	r3, [r2, #0]
			}
			//Check timeout release
			if(CalculatorTime(B3TimeRelease,miliSecs) > 500)
 800086a:	4b13      	ldr	r3, [pc, #76]	; (80008b8 <btnB3Scan+0x98>)
 800086c:	681b      	ldr	r3, [r3, #0]
 800086e:	4a14      	ldr	r2, [pc, #80]	; (80008c0 <btnB3Scan+0xa0>)
 8000870:	6812      	ldr	r2, [r2, #0]
 8000872:	4611      	mov	r1, r2
 8000874:	4618      	mov	r0, r3
 8000876:	f7ff ff71 	bl	800075c <CalculatorTime>
 800087a:	4603      	mov	r3, r0
 800087c:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8000880:	d915      	bls.n	80008ae <btnB3Scan+0x8e>
			{
				switch(B3Cnt)
 8000882:	4b0b      	ldr	r3, [pc, #44]	; (80008b0 <btnB3Scan+0x90>)
 8000884:	781b      	ldrb	r3, [r3, #0]
 8000886:	2b05      	cmp	r3, #5
 8000888:	d005      	beq.n	8000896 <btnB3Scan+0x76>
 800088a:	2b05      	cmp	r3, #5
 800088c:	dc07      	bgt.n	800089e <btnB3Scan+0x7e>
 800088e:	2b01      	cmp	r3, #1
 8000890:	d004      	beq.n	800089c <btnB3Scan+0x7c>
 8000892:	2b03      	cmp	r3, #3
						break;
					case 3:
//						LedControl_SetState(LED_KIT_ID0,LED_RED,STATE_OFF);
//						LedControl_SetState(LED_KIT_ID1,LED_RED,STATE_OFF);
//						LedControl_SetState(LED_ALL_ID,LED_BLUE,STATE_OFF);
						break;
 8000894:	e003      	b.n	800089e <btnB3Scan+0x7e>
					case 5:
						LedControl_SetStatus();
 8000896:	f7ff ff9e 	bl	80007d6 <LedControl_SetStatus>
						break;
 800089a:	e000      	b.n	800089e <btnB3Scan+0x7e>
						break;
 800089c:	bf00      	nop
				}
				B3Cnt = 0;
 800089e:	4b04      	ldr	r3, [pc, #16]	; (80008b0 <btnB3Scan+0x90>)
 80008a0:	2200      	movs	r2, #0
 80008a2:	701a      	strb	r2, [r3, #0]
				B3TimeRelease = 0;
 80008a4:	4b04      	ldr	r3, [pc, #16]	; (80008b8 <btnB3Scan+0x98>)
 80008a6:	2200      	movs	r2, #0
 80008a8:	601a      	str	r2, [r3, #0]
 80008aa:	e000      	b.n	80008ae <btnB3Scan+0x8e>
	if(B3Cnt==0) return;
 80008ac:	bf00      	nop
			}
		}
	}
}
 80008ae:	bd80      	pop	{r7, pc}
 80008b0:	20000030 	.word	0x20000030
 80008b4:	40020000 	.word	0x40020000
 80008b8:	2000004c 	.word	0x2000004c
 80008bc:	20000034 	.word	0x20000034
 80008c0:	20000048 	.word	0x20000048

080008c4 <btnB2Scan>:
 *
 * @retval none
 */
static uint32_t B2TimeRelease = 0;
void btnB2Scan()
{
 80008c4:	b580      	push	{r7, lr}
 80008c6:	af00      	add	r7, sp, #0
	if(B2Cnt==0) return;
 80008c8:	4b32      	ldr	r3, [pc, #200]	; (8000994 <btnB2Scan+0xd0>)
 80008ca:	781b      	ldrb	r3, [r3, #0]
 80008cc:	2b00      	cmp	r3, #0
 80008ce:	d05e      	beq.n	800098e <btnB2Scan+0xca>
	//giữ 500ms
	if(GPIO_ReadInputDataBit(BUTTON_B2_GPIO_PORT,BUTTON_B2_GPIO_PIN)==0)
 80008d0:	2108      	movs	r1, #8
 80008d2:	4831      	ldr	r0, [pc, #196]	; (8000998 <btnB2Scan+0xd4>)
 80008d4:	f000 fba8 	bl	8001028 <GPIO_ReadInputDataBit>
 80008d8:	4603      	mov	r3, r0
 80008da:	2b00      	cmp	r3, #0
 80008dc:	d114      	bne.n	8000908 <btnB2Scan+0x44>
	{
		B2TimeRelease = 0;
 80008de:	4b2f      	ldr	r3, [pc, #188]	; (800099c <btnB2Scan+0xd8>)
 80008e0:	2200      	movs	r2, #0
 80008e2:	601a      	str	r2, [r3, #0]
		if(CalculatorTime(B2time,miliSecs)==500)
 80008e4:	4b2e      	ldr	r3, [pc, #184]	; (80009a0 <btnB2Scan+0xdc>)
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	4a2e      	ldr	r2, [pc, #184]	; (80009a4 <btnB2Scan+0xe0>)
 80008ea:	6812      	ldr	r2, [r2, #0]
 80008ec:	4611      	mov	r1, r2
 80008ee:	4618      	mov	r0, r3
 80008f0:	f7ff ff34 	bl	800075c <CalculatorTime>
 80008f4:	4603      	mov	r3, r0
 80008f6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80008fa:	d149      	bne.n	8000990 <btnB2Scan+0xcc>
		{
			LedControl_SetState1(LED_KIT_ID0,LED_BLUE,STATE_ON);
 80008fc:	2201      	movs	r2, #1
 80008fe:	2102      	movs	r1, #2
 8000900:	2001      	movs	r0, #1
 8000902:	f7ff fe87 	bl	8000614 <LedControl_SetState1>
 8000906:	e043      	b.n	8000990 <btnB2Scan+0xcc>
		}
	}
	else
	{
		if( B2Cnt != 0)
 8000908:	4b22      	ldr	r3, [pc, #136]	; (8000994 <btnB2Scan+0xd0>)
 800090a:	781b      	ldrb	r3, [r3, #0]
 800090c:	2b00      	cmp	r3, #0
 800090e:	d03f      	beq.n	8000990 <btnB2Scan+0xcc>
		{
			//Update release time in the first time release
			if(B2TimeRelease == 0)
 8000910:	4b22      	ldr	r3, [pc, #136]	; (800099c <btnB2Scan+0xd8>)
 8000912:	681b      	ldr	r3, [r3, #0]
 8000914:	2b00      	cmp	r3, #0
 8000916:	d108      	bne.n	800092a <btnB2Scan+0x66>
			{
				B2TimeRelease = miliSecs;
 8000918:	4b22      	ldr	r3, [pc, #136]	; (80009a4 <btnB2Scan+0xe0>)
 800091a:	681b      	ldr	r3, [r3, #0]
 800091c:	4a1f      	ldr	r2, [pc, #124]	; (800099c <btnB2Scan+0xd8>)
 800091e:	6013      	str	r3, [r2, #0]
				LedControl_SetState1(LED_KIT_ID0,LED_BLUE,STATE_OFF);
 8000920:	2200      	movs	r2, #0
 8000922:	2102      	movs	r1, #2
 8000924:	2001      	movs	r0, #1
 8000926:	f7ff fe75 	bl	8000614 <LedControl_SetState1>
			}
			//Check timeout release
			if(CalculatorTime(B2TimeRelease,miliSecs) > 500)
 800092a:	4b1c      	ldr	r3, [pc, #112]	; (800099c <btnB2Scan+0xd8>)
 800092c:	681b      	ldr	r3, [r3, #0]
 800092e:	4a1d      	ldr	r2, [pc, #116]	; (80009a4 <btnB2Scan+0xe0>)
 8000930:	6812      	ldr	r2, [r2, #0]
 8000932:	4611      	mov	r1, r2
 8000934:	4618      	mov	r0, r3
 8000936:	f7ff ff11 	bl	800075c <CalculatorTime>
 800093a:	4603      	mov	r3, r0
 800093c:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8000940:	d926      	bls.n	8000990 <btnB2Scan+0xcc>
			{
				switch(B2Cnt)
 8000942:	4b14      	ldr	r3, [pc, #80]	; (8000994 <btnB2Scan+0xd0>)
 8000944:	781b      	ldrb	r3, [r3, #0]
 8000946:	3b01      	subs	r3, #1
 8000948:	2b04      	cmp	r3, #4
 800094a:	d819      	bhi.n	8000980 <btnB2Scan+0xbc>
 800094c:	a201      	add	r2, pc, #4	; (adr r2, 8000954 <btnB2Scan+0x90>)
 800094e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000952:	bf00      	nop
 8000954:	08000969 	.word	0x08000969
 8000958:	08000975 	.word	0x08000975
 800095c:	08000981 	.word	0x08000981
 8000960:	08000981 	.word	0x08000981
 8000964:	08000981 	.word	0x08000981
				{
					case 1:
						LedControl_SetState1(LED_KIT_ID0,LED_BLUE,STATE_OFF);
 8000968:	2200      	movs	r2, #0
 800096a:	2102      	movs	r1, #2
 800096c:	2001      	movs	r0, #1
 800096e:	f7ff fe51 	bl	8000614 <LedControl_SetState1>
						break;
 8000972:	e005      	b.n	8000980 <btnB2Scan+0xbc>
					case 2:
						LedControl_SetState1(LED_KIT_ID0,LED_BLUE,STATE_ON);
 8000974:	2201      	movs	r2, #1
 8000976:	2102      	movs	r1, #2
 8000978:	2001      	movs	r0, #1
 800097a:	f7ff fe4b 	bl	8000614 <LedControl_SetState1>
						break;
 800097e:	bf00      	nop
					case 3:
						break;
					case 5:
						break;
				}
				B2Cnt = 0;
 8000980:	4b04      	ldr	r3, [pc, #16]	; (8000994 <btnB2Scan+0xd0>)
 8000982:	2200      	movs	r2, #0
 8000984:	701a      	strb	r2, [r3, #0]
				B2TimeRelease = 0;
 8000986:	4b05      	ldr	r3, [pc, #20]	; (800099c <btnB2Scan+0xd8>)
 8000988:	2200      	movs	r2, #0
 800098a:	601a      	str	r2, [r3, #0]
 800098c:	e000      	b.n	8000990 <btnB2Scan+0xcc>
	if(B2Cnt==0) return;
 800098e:	bf00      	nop
			}
		}
	}
}
 8000990:	bd80      	pop	{r7, pc}
 8000992:	bf00      	nop
 8000994:	20000038 	.word	0x20000038
 8000998:	40020400 	.word	0x40020400
 800099c:	20000050 	.word	0x20000050
 80009a0:	2000003c 	.word	0x2000003c
 80009a4:	20000048 	.word	0x20000048

080009a8 <btnB4Scan>:
 *
 * @retval none
 */
static uint32_t B4TimeRelease = 0;
void btnB4Scan()
{
 80009a8:	b580      	push	{r7, lr}
 80009aa:	af00      	add	r7, sp, #0
	if(B4Cnt==0) return;
 80009ac:	4b32      	ldr	r3, [pc, #200]	; (8000a78 <btnB4Scan+0xd0>)
 80009ae:	781b      	ldrb	r3, [r3, #0]
 80009b0:	2b00      	cmp	r3, #0
 80009b2:	d05e      	beq.n	8000a72 <btnB4Scan+0xca>
	//giữ 500ms
	if(GPIO_ReadInputDataBit(BUTTON_B4_GPIO_PORT,BUTTON_B4_GPIO_PIN)==0)
 80009b4:	2101      	movs	r1, #1
 80009b6:	4831      	ldr	r0, [pc, #196]	; (8000a7c <btnB4Scan+0xd4>)
 80009b8:	f000 fb36 	bl	8001028 <GPIO_ReadInputDataBit>
 80009bc:	4603      	mov	r3, r0
 80009be:	2b00      	cmp	r3, #0
 80009c0:	d114      	bne.n	80009ec <btnB4Scan+0x44>
	{
		B4TimeRelease = 0;
 80009c2:	4b2f      	ldr	r3, [pc, #188]	; (8000a80 <btnB4Scan+0xd8>)
 80009c4:	2200      	movs	r2, #0
 80009c6:	601a      	str	r2, [r3, #0]
		if(CalculatorTime(B4time,miliSecs)==500)
 80009c8:	4b2e      	ldr	r3, [pc, #184]	; (8000a84 <btnB4Scan+0xdc>)
 80009ca:	681b      	ldr	r3, [r3, #0]
 80009cc:	4a2e      	ldr	r2, [pc, #184]	; (8000a88 <btnB4Scan+0xe0>)
 80009ce:	6812      	ldr	r2, [r2, #0]
 80009d0:	4611      	mov	r1, r2
 80009d2:	4618      	mov	r0, r3
 80009d4:	f7ff fec2 	bl	800075c <CalculatorTime>
 80009d8:	4603      	mov	r3, r0
 80009da:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80009de:	d149      	bne.n	8000a74 <btnB4Scan+0xcc>
		{
			LedControl_SetState1(LED_KIT_ID1,LED_RED,STATE_ON);
 80009e0:	2201      	movs	r2, #1
 80009e2:	2100      	movs	r1, #0
 80009e4:	2002      	movs	r0, #2
 80009e6:	f7ff fe15 	bl	8000614 <LedControl_SetState1>
 80009ea:	e043      	b.n	8000a74 <btnB4Scan+0xcc>
		}
	}
	else
	{
		if( B4Cnt != 0)
 80009ec:	4b22      	ldr	r3, [pc, #136]	; (8000a78 <btnB4Scan+0xd0>)
 80009ee:	781b      	ldrb	r3, [r3, #0]
 80009f0:	2b00      	cmp	r3, #0
 80009f2:	d03f      	beq.n	8000a74 <btnB4Scan+0xcc>
		{
			//Update release time in the first time release
			if(B4TimeRelease == 0)
 80009f4:	4b22      	ldr	r3, [pc, #136]	; (8000a80 <btnB4Scan+0xd8>)
 80009f6:	681b      	ldr	r3, [r3, #0]
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d108      	bne.n	8000a0e <btnB4Scan+0x66>
			{
				B4TimeRelease = miliSecs;
 80009fc:	4b22      	ldr	r3, [pc, #136]	; (8000a88 <btnB4Scan+0xe0>)
 80009fe:	681b      	ldr	r3, [r3, #0]
 8000a00:	4a1f      	ldr	r2, [pc, #124]	; (8000a80 <btnB4Scan+0xd8>)
 8000a02:	6013      	str	r3, [r2, #0]
				LedControl_SetState1(LED_KIT_ID1,LED_RED,STATE_OFF);
 8000a04:	2200      	movs	r2, #0
 8000a06:	2100      	movs	r1, #0
 8000a08:	2002      	movs	r0, #2
 8000a0a:	f7ff fe03 	bl	8000614 <LedControl_SetState1>
			}
			//Check timeout release
			if(CalculatorTime(B4TimeRelease,miliSecs) > 500)
 8000a0e:	4b1c      	ldr	r3, [pc, #112]	; (8000a80 <btnB4Scan+0xd8>)
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	4a1d      	ldr	r2, [pc, #116]	; (8000a88 <btnB4Scan+0xe0>)
 8000a14:	6812      	ldr	r2, [r2, #0]
 8000a16:	4611      	mov	r1, r2
 8000a18:	4618      	mov	r0, r3
 8000a1a:	f7ff fe9f 	bl	800075c <CalculatorTime>
 8000a1e:	4603      	mov	r3, r0
 8000a20:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8000a24:	d926      	bls.n	8000a74 <btnB4Scan+0xcc>
			{
				switch(B4Cnt)
 8000a26:	4b14      	ldr	r3, [pc, #80]	; (8000a78 <btnB4Scan+0xd0>)
 8000a28:	781b      	ldrb	r3, [r3, #0]
 8000a2a:	3b01      	subs	r3, #1
 8000a2c:	2b04      	cmp	r3, #4
 8000a2e:	d819      	bhi.n	8000a64 <btnB4Scan+0xbc>
 8000a30:	a201      	add	r2, pc, #4	; (adr r2, 8000a38 <btnB4Scan+0x90>)
 8000a32:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000a36:	bf00      	nop
 8000a38:	08000a4d 	.word	0x08000a4d
 8000a3c:	08000a59 	.word	0x08000a59
 8000a40:	08000a65 	.word	0x08000a65
 8000a44:	08000a65 	.word	0x08000a65
 8000a48:	08000a65 	.word	0x08000a65
				{
					case 1:
						LedControl_SetState1(LED_KIT_ID1,LED_RED,STATE_OFF);
 8000a4c:	2200      	movs	r2, #0
 8000a4e:	2100      	movs	r1, #0
 8000a50:	2002      	movs	r0, #2
 8000a52:	f7ff fddf 	bl	8000614 <LedControl_SetState1>
						break;
 8000a56:	e005      	b.n	8000a64 <btnB4Scan+0xbc>
					case 2:
						LedControl_SetState1(LED_KIT_ID1,LED_RED,STATE_ON);
 8000a58:	2201      	movs	r2, #1
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	2002      	movs	r0, #2
 8000a5e:	f7ff fdd9 	bl	8000614 <LedControl_SetState1>
						break;
 8000a62:	bf00      	nop
					case 3:
						break;
					case 5:
						break;
				}
				B4Cnt = 0;
 8000a64:	4b04      	ldr	r3, [pc, #16]	; (8000a78 <btnB4Scan+0xd0>)
 8000a66:	2200      	movs	r2, #0
 8000a68:	701a      	strb	r2, [r3, #0]
				B4TimeRelease = 0;
 8000a6a:	4b05      	ldr	r3, [pc, #20]	; (8000a80 <btnB4Scan+0xd8>)
 8000a6c:	2200      	movs	r2, #0
 8000a6e:	601a      	str	r2, [r3, #0]
 8000a70:	e000      	b.n	8000a74 <btnB4Scan+0xcc>
	if(B4Cnt==0) return;
 8000a72:	bf00      	nop
			}
		}
	}
}
 8000a74:	bd80      	pop	{r7, pc}
 8000a76:	bf00      	nop
 8000a78:	20000040 	.word	0x20000040
 8000a7c:	40020400 	.word	0x40020400
 8000a80:	20000054 	.word	0x20000054
 8000a84:	20000044 	.word	0x20000044
 8000a88:	20000048 	.word	0x20000048

08000a8c <main>:

int main(void)
{
 8000a8c:	b580      	push	{r7, lr}
 8000a8e:	af00      	add	r7, sp, #0
 	SystemCoreClockUpdate();
 8000a90:	f000 f872 	bl	8000b78 <SystemCoreClockUpdate>
	SysTick_Config(84000);
 8000a94:	4807      	ldr	r0, [pc, #28]	; (8000ab4 <main+0x28>)
 8000a96:	f7ff fbc7 	bl	8000228 <SysTick_Config>
	LedBuzz_Init();
 8000a9a:	f7ff fc01 	bl	80002a0 <LedBuzz_Init>
	Button_Init();
 8000a9e:	f7ff fcad 	bl	80003fc <Button_Init>
	Blinkled_StatusPower();
 8000aa2:	f7ff fe75 	bl	8000790 <Blinkled_StatusPower>
	while(1)
	{
		btnB3Scan();
 8000aa6:	f7ff febb 	bl	8000820 <btnB3Scan>
		btnB2Scan();
 8000aaa:	f7ff ff0b 	bl	80008c4 <btnB2Scan>
		btnB4Scan();
 8000aae:	f7ff ff7b 	bl	80009a8 <btnB4Scan>
		btnB3Scan();
 8000ab2:	e7f8      	b.n	8000aa6 <main+0x1a>
 8000ab4:	00014820 	.word	0x00014820

08000ab8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000ab8:	480d      	ldr	r0, [pc, #52]	; (8000af0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000aba:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000abc:	f000 f826 	bl	8000b0c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000ac0:	480c      	ldr	r0, [pc, #48]	; (8000af4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000ac2:	490d      	ldr	r1, [pc, #52]	; (8000af8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000ac4:	4a0d      	ldr	r2, [pc, #52]	; (8000afc <LoopForever+0xe>)
  movs r3, #0
 8000ac6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000ac8:	e002      	b.n	8000ad0 <LoopCopyDataInit>

08000aca <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000aca:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000acc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000ace:	3304      	adds	r3, #4

08000ad0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000ad0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000ad2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000ad4:	d3f9      	bcc.n	8000aca <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000ad6:	4a0a      	ldr	r2, [pc, #40]	; (8000b00 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000ad8:	4c0a      	ldr	r4, [pc, #40]	; (8000b04 <LoopForever+0x16>)
  movs r3, #0
 8000ada:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000adc:	e001      	b.n	8000ae2 <LoopFillZerobss>

08000ade <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000ade:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000ae0:	3204      	adds	r2, #4

08000ae2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000ae2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000ae4:	d3fb      	bcc.n	8000ade <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000ae6:	f000 fb71 	bl	80011cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000aea:	f7ff ffcf 	bl	8000a8c <main>

08000aee <LoopForever>:

LoopForever:
    b LoopForever
 8000aee:	e7fe      	b.n	8000aee <LoopForever>
  ldr   r0, =_estack
 8000af0:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000af4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000af8:	20000014 	.word	0x20000014
  ldr r2, =_sidata
 8000afc:	08001264 	.word	0x08001264
  ldr r2, =_sbss
 8000b00:	20000014 	.word	0x20000014
  ldr r4, =_ebss
 8000b04:	20000058 	.word	0x20000058

08000b08 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000b08:	e7fe      	b.n	8000b08 <ADC_IRQHandler>
	...

08000b0c <SystemInit>:
 8000b0c:	b580      	push	{r7, lr}
 8000b0e:	af00      	add	r7, sp, #0
 8000b10:	4b16      	ldr	r3, [pc, #88]	; (8000b6c <SystemInit+0x60>)
 8000b12:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000b16:	4a15      	ldr	r2, [pc, #84]	; (8000b6c <SystemInit+0x60>)
 8000b18:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000b1c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8000b20:	4b13      	ldr	r3, [pc, #76]	; (8000b70 <SystemInit+0x64>)
 8000b22:	681b      	ldr	r3, [r3, #0]
 8000b24:	4a12      	ldr	r2, [pc, #72]	; (8000b70 <SystemInit+0x64>)
 8000b26:	f043 0301 	orr.w	r3, r3, #1
 8000b2a:	6013      	str	r3, [r2, #0]
 8000b2c:	4b10      	ldr	r3, [pc, #64]	; (8000b70 <SystemInit+0x64>)
 8000b2e:	2200      	movs	r2, #0
 8000b30:	609a      	str	r2, [r3, #8]
 8000b32:	4b0f      	ldr	r3, [pc, #60]	; (8000b70 <SystemInit+0x64>)
 8000b34:	681b      	ldr	r3, [r3, #0]
 8000b36:	4a0e      	ldr	r2, [pc, #56]	; (8000b70 <SystemInit+0x64>)
 8000b38:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000b3c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000b40:	6013      	str	r3, [r2, #0]
 8000b42:	4b0b      	ldr	r3, [pc, #44]	; (8000b70 <SystemInit+0x64>)
 8000b44:	4a0b      	ldr	r2, [pc, #44]	; (8000b74 <SystemInit+0x68>)
 8000b46:	605a      	str	r2, [r3, #4]
 8000b48:	4b09      	ldr	r3, [pc, #36]	; (8000b70 <SystemInit+0x64>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	4a08      	ldr	r2, [pc, #32]	; (8000b70 <SystemInit+0x64>)
 8000b4e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000b52:	6013      	str	r3, [r2, #0]
 8000b54:	4b06      	ldr	r3, [pc, #24]	; (8000b70 <SystemInit+0x64>)
 8000b56:	2200      	movs	r2, #0
 8000b58:	60da      	str	r2, [r3, #12]
 8000b5a:	f000 f889 	bl	8000c70 <SetSysClock>
 8000b5e:	4b03      	ldr	r3, [pc, #12]	; (8000b6c <SystemInit+0x60>)
 8000b60:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000b64:	609a      	str	r2, [r3, #8]
 8000b66:	bf00      	nop
 8000b68:	bd80      	pop	{r7, pc}
 8000b6a:	bf00      	nop
 8000b6c:	e000ed00 	.word	0xe000ed00
 8000b70:	40023800 	.word	0x40023800
 8000b74:	24003010 	.word	0x24003010

08000b78 <SystemCoreClockUpdate>:
 8000b78:	b480      	push	{r7}
 8000b7a:	b087      	sub	sp, #28
 8000b7c:	af00      	add	r7, sp, #0
 8000b7e:	2300      	movs	r3, #0
 8000b80:	613b      	str	r3, [r7, #16]
 8000b82:	2300      	movs	r3, #0
 8000b84:	617b      	str	r3, [r7, #20]
 8000b86:	2302      	movs	r3, #2
 8000b88:	60fb      	str	r3, [r7, #12]
 8000b8a:	2300      	movs	r3, #0
 8000b8c:	60bb      	str	r3, [r7, #8]
 8000b8e:	2302      	movs	r3, #2
 8000b90:	607b      	str	r3, [r7, #4]
 8000b92:	4b32      	ldr	r3, [pc, #200]	; (8000c5c <SystemCoreClockUpdate+0xe4>)
 8000b94:	689b      	ldr	r3, [r3, #8]
 8000b96:	f003 030c 	and.w	r3, r3, #12
 8000b9a:	613b      	str	r3, [r7, #16]
 8000b9c:	693b      	ldr	r3, [r7, #16]
 8000b9e:	2b04      	cmp	r3, #4
 8000ba0:	d007      	beq.n	8000bb2 <SystemCoreClockUpdate+0x3a>
 8000ba2:	2b08      	cmp	r3, #8
 8000ba4:	d009      	beq.n	8000bba <SystemCoreClockUpdate+0x42>
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	d13d      	bne.n	8000c26 <SystemCoreClockUpdate+0xae>
 8000baa:	4b2d      	ldr	r3, [pc, #180]	; (8000c60 <SystemCoreClockUpdate+0xe8>)
 8000bac:	4a2d      	ldr	r2, [pc, #180]	; (8000c64 <SystemCoreClockUpdate+0xec>)
 8000bae:	601a      	str	r2, [r3, #0]
 8000bb0:	e03d      	b.n	8000c2e <SystemCoreClockUpdate+0xb6>
 8000bb2:	4b2b      	ldr	r3, [pc, #172]	; (8000c60 <SystemCoreClockUpdate+0xe8>)
 8000bb4:	4a2c      	ldr	r2, [pc, #176]	; (8000c68 <SystemCoreClockUpdate+0xf0>)
 8000bb6:	601a      	str	r2, [r3, #0]
 8000bb8:	e039      	b.n	8000c2e <SystemCoreClockUpdate+0xb6>
 8000bba:	4b28      	ldr	r3, [pc, #160]	; (8000c5c <SystemCoreClockUpdate+0xe4>)
 8000bbc:	685b      	ldr	r3, [r3, #4]
 8000bbe:	0d9b      	lsrs	r3, r3, #22
 8000bc0:	f003 0301 	and.w	r3, r3, #1
 8000bc4:	60bb      	str	r3, [r7, #8]
 8000bc6:	4b25      	ldr	r3, [pc, #148]	; (8000c5c <SystemCoreClockUpdate+0xe4>)
 8000bc8:	685b      	ldr	r3, [r3, #4]
 8000bca:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000bce:	607b      	str	r3, [r7, #4]
 8000bd0:	68bb      	ldr	r3, [r7, #8]
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d00c      	beq.n	8000bf0 <SystemCoreClockUpdate+0x78>
 8000bd6:	4a24      	ldr	r2, [pc, #144]	; (8000c68 <SystemCoreClockUpdate+0xf0>)
 8000bd8:	687b      	ldr	r3, [r7, #4]
 8000bda:	fbb2 f3f3 	udiv	r3, r2, r3
 8000bde:	4a1f      	ldr	r2, [pc, #124]	; (8000c5c <SystemCoreClockUpdate+0xe4>)
 8000be0:	6852      	ldr	r2, [r2, #4]
 8000be2:	0992      	lsrs	r2, r2, #6
 8000be4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000be8:	fb02 f303 	mul.w	r3, r2, r3
 8000bec:	617b      	str	r3, [r7, #20]
 8000bee:	e00b      	b.n	8000c08 <SystemCoreClockUpdate+0x90>
 8000bf0:	4a1c      	ldr	r2, [pc, #112]	; (8000c64 <SystemCoreClockUpdate+0xec>)
 8000bf2:	687b      	ldr	r3, [r7, #4]
 8000bf4:	fbb2 f3f3 	udiv	r3, r2, r3
 8000bf8:	4a18      	ldr	r2, [pc, #96]	; (8000c5c <SystemCoreClockUpdate+0xe4>)
 8000bfa:	6852      	ldr	r2, [r2, #4]
 8000bfc:	0992      	lsrs	r2, r2, #6
 8000bfe:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000c02:	fb02 f303 	mul.w	r3, r2, r3
 8000c06:	617b      	str	r3, [r7, #20]
 8000c08:	4b14      	ldr	r3, [pc, #80]	; (8000c5c <SystemCoreClockUpdate+0xe4>)
 8000c0a:	685b      	ldr	r3, [r3, #4]
 8000c0c:	0c1b      	lsrs	r3, r3, #16
 8000c0e:	f003 0303 	and.w	r3, r3, #3
 8000c12:	3301      	adds	r3, #1
 8000c14:	005b      	lsls	r3, r3, #1
 8000c16:	60fb      	str	r3, [r7, #12]
 8000c18:	697a      	ldr	r2, [r7, #20]
 8000c1a:	68fb      	ldr	r3, [r7, #12]
 8000c1c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c20:	4a0f      	ldr	r2, [pc, #60]	; (8000c60 <SystemCoreClockUpdate+0xe8>)
 8000c22:	6013      	str	r3, [r2, #0]
 8000c24:	e003      	b.n	8000c2e <SystemCoreClockUpdate+0xb6>
 8000c26:	4b0e      	ldr	r3, [pc, #56]	; (8000c60 <SystemCoreClockUpdate+0xe8>)
 8000c28:	4a0e      	ldr	r2, [pc, #56]	; (8000c64 <SystemCoreClockUpdate+0xec>)
 8000c2a:	601a      	str	r2, [r3, #0]
 8000c2c:	bf00      	nop
 8000c2e:	4b0b      	ldr	r3, [pc, #44]	; (8000c5c <SystemCoreClockUpdate+0xe4>)
 8000c30:	689b      	ldr	r3, [r3, #8]
 8000c32:	091b      	lsrs	r3, r3, #4
 8000c34:	f003 030f 	and.w	r3, r3, #15
 8000c38:	4a0c      	ldr	r2, [pc, #48]	; (8000c6c <SystemCoreClockUpdate+0xf4>)
 8000c3a:	5cd3      	ldrb	r3, [r2, r3]
 8000c3c:	b2db      	uxtb	r3, r3
 8000c3e:	613b      	str	r3, [r7, #16]
 8000c40:	4b07      	ldr	r3, [pc, #28]	; (8000c60 <SystemCoreClockUpdate+0xe8>)
 8000c42:	681a      	ldr	r2, [r3, #0]
 8000c44:	693b      	ldr	r3, [r7, #16]
 8000c46:	fa22 f303 	lsr.w	r3, r2, r3
 8000c4a:	4a05      	ldr	r2, [pc, #20]	; (8000c60 <SystemCoreClockUpdate+0xe8>)
 8000c4c:	6013      	str	r3, [r2, #0]
 8000c4e:	bf00      	nop
 8000c50:	371c      	adds	r7, #28
 8000c52:	46bd      	mov	sp, r7
 8000c54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c58:	4770      	bx	lr
 8000c5a:	bf00      	nop
 8000c5c:	40023800 	.word	0x40023800
 8000c60:	20000000 	.word	0x20000000
 8000c64:	00f42400 	.word	0x00f42400
 8000c68:	017d7840 	.word	0x017d7840
 8000c6c:	20000004 	.word	0x20000004

08000c70 <SetSysClock>:
 8000c70:	b480      	push	{r7}
 8000c72:	af00      	add	r7, sp, #0
 8000c74:	4b22      	ldr	r3, [pc, #136]	; (8000d00 <SetSysClock+0x90>)
 8000c76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c78:	4a21      	ldr	r2, [pc, #132]	; (8000d00 <SetSysClock+0x90>)
 8000c7a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000c7e:	6413      	str	r3, [r2, #64]	; 0x40
 8000c80:	4b20      	ldr	r3, [pc, #128]	; (8000d04 <SetSysClock+0x94>)
 8000c82:	681b      	ldr	r3, [r3, #0]
 8000c84:	4a1f      	ldr	r2, [pc, #124]	; (8000d04 <SetSysClock+0x94>)
 8000c86:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000c8a:	6013      	str	r3, [r2, #0]
 8000c8c:	4b1c      	ldr	r3, [pc, #112]	; (8000d00 <SetSysClock+0x90>)
 8000c8e:	4a1c      	ldr	r2, [pc, #112]	; (8000d00 <SetSysClock+0x90>)
 8000c90:	689b      	ldr	r3, [r3, #8]
 8000c92:	6093      	str	r3, [r2, #8]
 8000c94:	4b1a      	ldr	r3, [pc, #104]	; (8000d00 <SetSysClock+0x90>)
 8000c96:	4a1a      	ldr	r2, [pc, #104]	; (8000d00 <SetSysClock+0x90>)
 8000c98:	689b      	ldr	r3, [r3, #8]
 8000c9a:	6093      	str	r3, [r2, #8]
 8000c9c:	4b18      	ldr	r3, [pc, #96]	; (8000d00 <SetSysClock+0x90>)
 8000c9e:	689b      	ldr	r3, [r3, #8]
 8000ca0:	4a17      	ldr	r2, [pc, #92]	; (8000d00 <SetSysClock+0x90>)
 8000ca2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000ca6:	6093      	str	r3, [r2, #8]
 8000ca8:	4b15      	ldr	r3, [pc, #84]	; (8000d00 <SetSysClock+0x90>)
 8000caa:	4a17      	ldr	r2, [pc, #92]	; (8000d08 <SetSysClock+0x98>)
 8000cac:	605a      	str	r2, [r3, #4]
 8000cae:	4b14      	ldr	r3, [pc, #80]	; (8000d00 <SetSysClock+0x90>)
 8000cb0:	681b      	ldr	r3, [r3, #0]
 8000cb2:	4a13      	ldr	r2, [pc, #76]	; (8000d00 <SetSysClock+0x90>)
 8000cb4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000cb8:	6013      	str	r3, [r2, #0]
 8000cba:	bf00      	nop
 8000cbc:	4b10      	ldr	r3, [pc, #64]	; (8000d00 <SetSysClock+0x90>)
 8000cbe:	681b      	ldr	r3, [r3, #0]
 8000cc0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d0f9      	beq.n	8000cbc <SetSysClock+0x4c>
 8000cc8:	4b10      	ldr	r3, [pc, #64]	; (8000d0c <SetSysClock+0x9c>)
 8000cca:	f240 6202 	movw	r2, #1538	; 0x602
 8000cce:	601a      	str	r2, [r3, #0]
 8000cd0:	4b0b      	ldr	r3, [pc, #44]	; (8000d00 <SetSysClock+0x90>)
 8000cd2:	689b      	ldr	r3, [r3, #8]
 8000cd4:	4a0a      	ldr	r2, [pc, #40]	; (8000d00 <SetSysClock+0x90>)
 8000cd6:	f023 0303 	bic.w	r3, r3, #3
 8000cda:	6093      	str	r3, [r2, #8]
 8000cdc:	4b08      	ldr	r3, [pc, #32]	; (8000d00 <SetSysClock+0x90>)
 8000cde:	689b      	ldr	r3, [r3, #8]
 8000ce0:	4a07      	ldr	r2, [pc, #28]	; (8000d00 <SetSysClock+0x90>)
 8000ce2:	f043 0302 	orr.w	r3, r3, #2
 8000ce6:	6093      	str	r3, [r2, #8]
 8000ce8:	bf00      	nop
 8000cea:	4b05      	ldr	r3, [pc, #20]	; (8000d00 <SetSysClock+0x90>)
 8000cec:	689b      	ldr	r3, [r3, #8]
 8000cee:	f003 030c 	and.w	r3, r3, #12
 8000cf2:	2b08      	cmp	r3, #8
 8000cf4:	d1f9      	bne.n	8000cea <SetSysClock+0x7a>
 8000cf6:	bf00      	nop
 8000cf8:	46bd      	mov	sp, r7
 8000cfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cfe:	4770      	bx	lr
 8000d00:	40023800 	.word	0x40023800
 8000d04:	40007000 	.word	0x40007000
 8000d08:	08015410 	.word	0x08015410
 8000d0c:	40023c00 	.word	0x40023c00

08000d10 <NVIC_Init>:
 8000d10:	b480      	push	{r7}
 8000d12:	b085      	sub	sp, #20
 8000d14:	af00      	add	r7, sp, #0
 8000d16:	6078      	str	r0, [r7, #4]
 8000d18:	2300      	movs	r3, #0
 8000d1a:	73fb      	strb	r3, [r7, #15]
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	73bb      	strb	r3, [r7, #14]
 8000d20:	230f      	movs	r3, #15
 8000d22:	737b      	strb	r3, [r7, #13]
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	78db      	ldrb	r3, [r3, #3]
 8000d28:	2b00      	cmp	r3, #0
 8000d2a:	d039      	beq.n	8000da0 <NVIC_Init+0x90>
 8000d2c:	4b27      	ldr	r3, [pc, #156]	; (8000dcc <NVIC_Init+0xbc>)
 8000d2e:	68db      	ldr	r3, [r3, #12]
 8000d30:	43db      	mvns	r3, r3
 8000d32:	0a1b      	lsrs	r3, r3, #8
 8000d34:	b2db      	uxtb	r3, r3
 8000d36:	f003 0307 	and.w	r3, r3, #7
 8000d3a:	73fb      	strb	r3, [r7, #15]
 8000d3c:	7bfb      	ldrb	r3, [r7, #15]
 8000d3e:	f1c3 0304 	rsb	r3, r3, #4
 8000d42:	73bb      	strb	r3, [r7, #14]
 8000d44:	7b7a      	ldrb	r2, [r7, #13]
 8000d46:	7bfb      	ldrb	r3, [r7, #15]
 8000d48:	fa42 f303 	asr.w	r3, r2, r3
 8000d4c:	737b      	strb	r3, [r7, #13]
 8000d4e:	687b      	ldr	r3, [r7, #4]
 8000d50:	785b      	ldrb	r3, [r3, #1]
 8000d52:	461a      	mov	r2, r3
 8000d54:	7bbb      	ldrb	r3, [r7, #14]
 8000d56:	fa02 f303 	lsl.w	r3, r2, r3
 8000d5a:	73fb      	strb	r3, [r7, #15]
 8000d5c:	687b      	ldr	r3, [r7, #4]
 8000d5e:	789a      	ldrb	r2, [r3, #2]
 8000d60:	7b7b      	ldrb	r3, [r7, #13]
 8000d62:	4013      	ands	r3, r2
 8000d64:	b2da      	uxtb	r2, r3
 8000d66:	7bfb      	ldrb	r3, [r7, #15]
 8000d68:	4313      	orrs	r3, r2
 8000d6a:	73fb      	strb	r3, [r7, #15]
 8000d6c:	7bfb      	ldrb	r3, [r7, #15]
 8000d6e:	011b      	lsls	r3, r3, #4
 8000d70:	73fb      	strb	r3, [r7, #15]
 8000d72:	4a17      	ldr	r2, [pc, #92]	; (8000dd0 <NVIC_Init+0xc0>)
 8000d74:	687b      	ldr	r3, [r7, #4]
 8000d76:	781b      	ldrb	r3, [r3, #0]
 8000d78:	4413      	add	r3, r2
 8000d7a:	7bfa      	ldrb	r2, [r7, #15]
 8000d7c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000d80:	687b      	ldr	r3, [r7, #4]
 8000d82:	781b      	ldrb	r3, [r3, #0]
 8000d84:	f003 031f 	and.w	r3, r3, #31
 8000d88:	4911      	ldr	r1, [pc, #68]	; (8000dd0 <NVIC_Init+0xc0>)
 8000d8a:	687a      	ldr	r2, [r7, #4]
 8000d8c:	7812      	ldrb	r2, [r2, #0]
 8000d8e:	0952      	lsrs	r2, r2, #5
 8000d90:	b2d2      	uxtb	r2, r2
 8000d92:	4610      	mov	r0, r2
 8000d94:	2201      	movs	r2, #1
 8000d96:	fa02 f303 	lsl.w	r3, r2, r3
 8000d9a:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 8000d9e:	e00f      	b.n	8000dc0 <NVIC_Init+0xb0>
 8000da0:	687b      	ldr	r3, [r7, #4]
 8000da2:	781b      	ldrb	r3, [r3, #0]
 8000da4:	f003 031f 	and.w	r3, r3, #31
 8000da8:	4909      	ldr	r1, [pc, #36]	; (8000dd0 <NVIC_Init+0xc0>)
 8000daa:	687a      	ldr	r2, [r7, #4]
 8000dac:	7812      	ldrb	r2, [r2, #0]
 8000dae:	0952      	lsrs	r2, r2, #5
 8000db0:	b2d2      	uxtb	r2, r2
 8000db2:	4610      	mov	r0, r2
 8000db4:	2201      	movs	r2, #1
 8000db6:	409a      	lsls	r2, r3
 8000db8:	f100 0320 	add.w	r3, r0, #32
 8000dbc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000dc0:	bf00      	nop
 8000dc2:	3714      	adds	r7, #20
 8000dc4:	46bd      	mov	sp, r7
 8000dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dca:	4770      	bx	lr
 8000dcc:	e000ed00 	.word	0xe000ed00
 8000dd0:	e000e100 	.word	0xe000e100

08000dd4 <EXTI_Init>:
 8000dd4:	b480      	push	{r7}
 8000dd6:	b085      	sub	sp, #20
 8000dd8:	af00      	add	r7, sp, #0
 8000dda:	6078      	str	r0, [r7, #4]
 8000ddc:	2300      	movs	r3, #0
 8000dde:	60fb      	str	r3, [r7, #12]
 8000de0:	4b34      	ldr	r3, [pc, #208]	; (8000eb4 <EXTI_Init+0xe0>)
 8000de2:	60fb      	str	r3, [r7, #12]
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	799b      	ldrb	r3, [r3, #6]
 8000de8:	2b00      	cmp	r3, #0
 8000dea:	d04f      	beq.n	8000e8c <EXTI_Init+0xb8>
 8000dec:	4b31      	ldr	r3, [pc, #196]	; (8000eb4 <EXTI_Init+0xe0>)
 8000dee:	681a      	ldr	r2, [r3, #0]
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	681b      	ldr	r3, [r3, #0]
 8000df4:	43db      	mvns	r3, r3
 8000df6:	492f      	ldr	r1, [pc, #188]	; (8000eb4 <EXTI_Init+0xe0>)
 8000df8:	4013      	ands	r3, r2
 8000dfa:	600b      	str	r3, [r1, #0]
 8000dfc:	4b2d      	ldr	r3, [pc, #180]	; (8000eb4 <EXTI_Init+0xe0>)
 8000dfe:	685a      	ldr	r2, [r3, #4]
 8000e00:	687b      	ldr	r3, [r7, #4]
 8000e02:	681b      	ldr	r3, [r3, #0]
 8000e04:	43db      	mvns	r3, r3
 8000e06:	492b      	ldr	r1, [pc, #172]	; (8000eb4 <EXTI_Init+0xe0>)
 8000e08:	4013      	ands	r3, r2
 8000e0a:	604b      	str	r3, [r1, #4]
 8000e0c:	687b      	ldr	r3, [r7, #4]
 8000e0e:	791b      	ldrb	r3, [r3, #4]
 8000e10:	461a      	mov	r2, r3
 8000e12:	68fb      	ldr	r3, [r7, #12]
 8000e14:	4413      	add	r3, r2
 8000e16:	60fb      	str	r3, [r7, #12]
 8000e18:	68fb      	ldr	r3, [r7, #12]
 8000e1a:	6819      	ldr	r1, [r3, #0]
 8000e1c:	687b      	ldr	r3, [r7, #4]
 8000e1e:	681a      	ldr	r2, [r3, #0]
 8000e20:	68fb      	ldr	r3, [r7, #12]
 8000e22:	430a      	orrs	r2, r1
 8000e24:	601a      	str	r2, [r3, #0]
 8000e26:	4b23      	ldr	r3, [pc, #140]	; (8000eb4 <EXTI_Init+0xe0>)
 8000e28:	689a      	ldr	r2, [r3, #8]
 8000e2a:	687b      	ldr	r3, [r7, #4]
 8000e2c:	681b      	ldr	r3, [r3, #0]
 8000e2e:	43db      	mvns	r3, r3
 8000e30:	4920      	ldr	r1, [pc, #128]	; (8000eb4 <EXTI_Init+0xe0>)
 8000e32:	4013      	ands	r3, r2
 8000e34:	608b      	str	r3, [r1, #8]
 8000e36:	4b1f      	ldr	r3, [pc, #124]	; (8000eb4 <EXTI_Init+0xe0>)
 8000e38:	68da      	ldr	r2, [r3, #12]
 8000e3a:	687b      	ldr	r3, [r7, #4]
 8000e3c:	681b      	ldr	r3, [r3, #0]
 8000e3e:	43db      	mvns	r3, r3
 8000e40:	491c      	ldr	r1, [pc, #112]	; (8000eb4 <EXTI_Init+0xe0>)
 8000e42:	4013      	ands	r3, r2
 8000e44:	60cb      	str	r3, [r1, #12]
 8000e46:	687b      	ldr	r3, [r7, #4]
 8000e48:	795b      	ldrb	r3, [r3, #5]
 8000e4a:	2b10      	cmp	r3, #16
 8000e4c:	d10e      	bne.n	8000e6c <EXTI_Init+0x98>
 8000e4e:	4b19      	ldr	r3, [pc, #100]	; (8000eb4 <EXTI_Init+0xe0>)
 8000e50:	689a      	ldr	r2, [r3, #8]
 8000e52:	687b      	ldr	r3, [r7, #4]
 8000e54:	681b      	ldr	r3, [r3, #0]
 8000e56:	4917      	ldr	r1, [pc, #92]	; (8000eb4 <EXTI_Init+0xe0>)
 8000e58:	4313      	orrs	r3, r2
 8000e5a:	608b      	str	r3, [r1, #8]
 8000e5c:	4b15      	ldr	r3, [pc, #84]	; (8000eb4 <EXTI_Init+0xe0>)
 8000e5e:	68da      	ldr	r2, [r3, #12]
 8000e60:	687b      	ldr	r3, [r7, #4]
 8000e62:	681b      	ldr	r3, [r3, #0]
 8000e64:	4913      	ldr	r1, [pc, #76]	; (8000eb4 <EXTI_Init+0xe0>)
 8000e66:	4313      	orrs	r3, r2
 8000e68:	60cb      	str	r3, [r1, #12]
 8000e6a:	e01d      	b.n	8000ea8 <EXTI_Init+0xd4>
 8000e6c:	4b11      	ldr	r3, [pc, #68]	; (8000eb4 <EXTI_Init+0xe0>)
 8000e6e:	60fb      	str	r3, [r7, #12]
 8000e70:	687b      	ldr	r3, [r7, #4]
 8000e72:	795b      	ldrb	r3, [r3, #5]
 8000e74:	461a      	mov	r2, r3
 8000e76:	68fb      	ldr	r3, [r7, #12]
 8000e78:	4413      	add	r3, r2
 8000e7a:	60fb      	str	r3, [r7, #12]
 8000e7c:	68fb      	ldr	r3, [r7, #12]
 8000e7e:	6819      	ldr	r1, [r3, #0]
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	681a      	ldr	r2, [r3, #0]
 8000e84:	68fb      	ldr	r3, [r7, #12]
 8000e86:	430a      	orrs	r2, r1
 8000e88:	601a      	str	r2, [r3, #0]
 8000e8a:	e00d      	b.n	8000ea8 <EXTI_Init+0xd4>
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	791b      	ldrb	r3, [r3, #4]
 8000e90:	461a      	mov	r2, r3
 8000e92:	68fb      	ldr	r3, [r7, #12]
 8000e94:	4413      	add	r3, r2
 8000e96:	60fb      	str	r3, [r7, #12]
 8000e98:	68fb      	ldr	r3, [r7, #12]
 8000e9a:	6819      	ldr	r1, [r3, #0]
 8000e9c:	687b      	ldr	r3, [r7, #4]
 8000e9e:	681b      	ldr	r3, [r3, #0]
 8000ea0:	43da      	mvns	r2, r3
 8000ea2:	68fb      	ldr	r3, [r7, #12]
 8000ea4:	400a      	ands	r2, r1
 8000ea6:	601a      	str	r2, [r3, #0]
 8000ea8:	bf00      	nop
 8000eaa:	3714      	adds	r7, #20
 8000eac:	46bd      	mov	sp, r7
 8000eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eb2:	4770      	bx	lr
 8000eb4:	40013c00 	.word	0x40013c00

08000eb8 <EXTI_GetFlagStatus>:
 8000eb8:	b480      	push	{r7}
 8000eba:	b085      	sub	sp, #20
 8000ebc:	af00      	add	r7, sp, #0
 8000ebe:	6078      	str	r0, [r7, #4]
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	73fb      	strb	r3, [r7, #15]
 8000ec4:	4b08      	ldr	r3, [pc, #32]	; (8000ee8 <EXTI_GetFlagStatus+0x30>)
 8000ec6:	695a      	ldr	r2, [r3, #20]
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	4013      	ands	r3, r2
 8000ecc:	2b00      	cmp	r3, #0
 8000ece:	d002      	beq.n	8000ed6 <EXTI_GetFlagStatus+0x1e>
 8000ed0:	2301      	movs	r3, #1
 8000ed2:	73fb      	strb	r3, [r7, #15]
 8000ed4:	e001      	b.n	8000eda <EXTI_GetFlagStatus+0x22>
 8000ed6:	2300      	movs	r3, #0
 8000ed8:	73fb      	strb	r3, [r7, #15]
 8000eda:	7bfb      	ldrb	r3, [r7, #15]
 8000edc:	4618      	mov	r0, r3
 8000ede:	3714      	adds	r7, #20
 8000ee0:	46bd      	mov	sp, r7
 8000ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee6:	4770      	bx	lr
 8000ee8:	40013c00 	.word	0x40013c00

08000eec <EXTI_ClearITPendingBit>:
 8000eec:	b480      	push	{r7}
 8000eee:	b083      	sub	sp, #12
 8000ef0:	af00      	add	r7, sp, #0
 8000ef2:	6078      	str	r0, [r7, #4]
 8000ef4:	4a04      	ldr	r2, [pc, #16]	; (8000f08 <EXTI_ClearITPendingBit+0x1c>)
 8000ef6:	687b      	ldr	r3, [r7, #4]
 8000ef8:	6153      	str	r3, [r2, #20]
 8000efa:	bf00      	nop
 8000efc:	370c      	adds	r7, #12
 8000efe:	46bd      	mov	sp, r7
 8000f00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f04:	4770      	bx	lr
 8000f06:	bf00      	nop
 8000f08:	40013c00 	.word	0x40013c00

08000f0c <GPIO_Init>:
 8000f0c:	b480      	push	{r7}
 8000f0e:	b087      	sub	sp, #28
 8000f10:	af00      	add	r7, sp, #0
 8000f12:	6078      	str	r0, [r7, #4]
 8000f14:	6039      	str	r1, [r7, #0]
 8000f16:	2300      	movs	r3, #0
 8000f18:	617b      	str	r3, [r7, #20]
 8000f1a:	2300      	movs	r3, #0
 8000f1c:	613b      	str	r3, [r7, #16]
 8000f1e:	2300      	movs	r3, #0
 8000f20:	60fb      	str	r3, [r7, #12]
 8000f22:	2300      	movs	r3, #0
 8000f24:	617b      	str	r3, [r7, #20]
 8000f26:	e076      	b.n	8001016 <GPIO_Init+0x10a>
 8000f28:	2201      	movs	r2, #1
 8000f2a:	697b      	ldr	r3, [r7, #20]
 8000f2c:	fa02 f303 	lsl.w	r3, r2, r3
 8000f30:	613b      	str	r3, [r7, #16]
 8000f32:	683b      	ldr	r3, [r7, #0]
 8000f34:	681b      	ldr	r3, [r3, #0]
 8000f36:	693a      	ldr	r2, [r7, #16]
 8000f38:	4013      	ands	r3, r2
 8000f3a:	60fb      	str	r3, [r7, #12]
 8000f3c:	68fa      	ldr	r2, [r7, #12]
 8000f3e:	693b      	ldr	r3, [r7, #16]
 8000f40:	429a      	cmp	r2, r3
 8000f42:	d165      	bne.n	8001010 <GPIO_Init+0x104>
 8000f44:	687b      	ldr	r3, [r7, #4]
 8000f46:	681a      	ldr	r2, [r3, #0]
 8000f48:	697b      	ldr	r3, [r7, #20]
 8000f4a:	005b      	lsls	r3, r3, #1
 8000f4c:	2103      	movs	r1, #3
 8000f4e:	fa01 f303 	lsl.w	r3, r1, r3
 8000f52:	43db      	mvns	r3, r3
 8000f54:	401a      	ands	r2, r3
 8000f56:	687b      	ldr	r3, [r7, #4]
 8000f58:	601a      	str	r2, [r3, #0]
 8000f5a:	687b      	ldr	r3, [r7, #4]
 8000f5c:	681a      	ldr	r2, [r3, #0]
 8000f5e:	683b      	ldr	r3, [r7, #0]
 8000f60:	791b      	ldrb	r3, [r3, #4]
 8000f62:	4619      	mov	r1, r3
 8000f64:	697b      	ldr	r3, [r7, #20]
 8000f66:	005b      	lsls	r3, r3, #1
 8000f68:	fa01 f303 	lsl.w	r3, r1, r3
 8000f6c:	431a      	orrs	r2, r3
 8000f6e:	687b      	ldr	r3, [r7, #4]
 8000f70:	601a      	str	r2, [r3, #0]
 8000f72:	683b      	ldr	r3, [r7, #0]
 8000f74:	791b      	ldrb	r3, [r3, #4]
 8000f76:	2b01      	cmp	r3, #1
 8000f78:	d003      	beq.n	8000f82 <GPIO_Init+0x76>
 8000f7a:	683b      	ldr	r3, [r7, #0]
 8000f7c:	791b      	ldrb	r3, [r3, #4]
 8000f7e:	2b02      	cmp	r3, #2
 8000f80:	d12e      	bne.n	8000fe0 <GPIO_Init+0xd4>
 8000f82:	687b      	ldr	r3, [r7, #4]
 8000f84:	689a      	ldr	r2, [r3, #8]
 8000f86:	697b      	ldr	r3, [r7, #20]
 8000f88:	005b      	lsls	r3, r3, #1
 8000f8a:	2103      	movs	r1, #3
 8000f8c:	fa01 f303 	lsl.w	r3, r1, r3
 8000f90:	43db      	mvns	r3, r3
 8000f92:	401a      	ands	r2, r3
 8000f94:	687b      	ldr	r3, [r7, #4]
 8000f96:	609a      	str	r2, [r3, #8]
 8000f98:	687b      	ldr	r3, [r7, #4]
 8000f9a:	689a      	ldr	r2, [r3, #8]
 8000f9c:	683b      	ldr	r3, [r7, #0]
 8000f9e:	795b      	ldrb	r3, [r3, #5]
 8000fa0:	4619      	mov	r1, r3
 8000fa2:	697b      	ldr	r3, [r7, #20]
 8000fa4:	005b      	lsls	r3, r3, #1
 8000fa6:	fa01 f303 	lsl.w	r3, r1, r3
 8000faa:	431a      	orrs	r2, r3
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	609a      	str	r2, [r3, #8]
 8000fb0:	687b      	ldr	r3, [r7, #4]
 8000fb2:	685a      	ldr	r2, [r3, #4]
 8000fb4:	697b      	ldr	r3, [r7, #20]
 8000fb6:	b29b      	uxth	r3, r3
 8000fb8:	4619      	mov	r1, r3
 8000fba:	2301      	movs	r3, #1
 8000fbc:	408b      	lsls	r3, r1
 8000fbe:	43db      	mvns	r3, r3
 8000fc0:	401a      	ands	r2, r3
 8000fc2:	687b      	ldr	r3, [r7, #4]
 8000fc4:	605a      	str	r2, [r3, #4]
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	685b      	ldr	r3, [r3, #4]
 8000fca:	683a      	ldr	r2, [r7, #0]
 8000fcc:	7992      	ldrb	r2, [r2, #6]
 8000fce:	4611      	mov	r1, r2
 8000fd0:	697a      	ldr	r2, [r7, #20]
 8000fd2:	b292      	uxth	r2, r2
 8000fd4:	fa01 f202 	lsl.w	r2, r1, r2
 8000fd8:	b292      	uxth	r2, r2
 8000fda:	431a      	orrs	r2, r3
 8000fdc:	687b      	ldr	r3, [r7, #4]
 8000fde:	605a      	str	r2, [r3, #4]
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	68da      	ldr	r2, [r3, #12]
 8000fe4:	697b      	ldr	r3, [r7, #20]
 8000fe6:	b29b      	uxth	r3, r3
 8000fe8:	005b      	lsls	r3, r3, #1
 8000fea:	2103      	movs	r1, #3
 8000fec:	fa01 f303 	lsl.w	r3, r1, r3
 8000ff0:	43db      	mvns	r3, r3
 8000ff2:	401a      	ands	r2, r3
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	60da      	str	r2, [r3, #12]
 8000ff8:	687b      	ldr	r3, [r7, #4]
 8000ffa:	68da      	ldr	r2, [r3, #12]
 8000ffc:	683b      	ldr	r3, [r7, #0]
 8000ffe:	79db      	ldrb	r3, [r3, #7]
 8001000:	4619      	mov	r1, r3
 8001002:	697b      	ldr	r3, [r7, #20]
 8001004:	005b      	lsls	r3, r3, #1
 8001006:	fa01 f303 	lsl.w	r3, r1, r3
 800100a:	431a      	orrs	r2, r3
 800100c:	687b      	ldr	r3, [r7, #4]
 800100e:	60da      	str	r2, [r3, #12]
 8001010:	697b      	ldr	r3, [r7, #20]
 8001012:	3301      	adds	r3, #1
 8001014:	617b      	str	r3, [r7, #20]
 8001016:	697b      	ldr	r3, [r7, #20]
 8001018:	2b0f      	cmp	r3, #15
 800101a:	d985      	bls.n	8000f28 <GPIO_Init+0x1c>
 800101c:	bf00      	nop
 800101e:	371c      	adds	r7, #28
 8001020:	46bd      	mov	sp, r7
 8001022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001026:	4770      	bx	lr

08001028 <GPIO_ReadInputDataBit>:
 8001028:	b480      	push	{r7}
 800102a:	b085      	sub	sp, #20
 800102c:	af00      	add	r7, sp, #0
 800102e:	6078      	str	r0, [r7, #4]
 8001030:	460b      	mov	r3, r1
 8001032:	807b      	strh	r3, [r7, #2]
 8001034:	2300      	movs	r3, #0
 8001036:	73fb      	strb	r3, [r7, #15]
 8001038:	687b      	ldr	r3, [r7, #4]
 800103a:	691a      	ldr	r2, [r3, #16]
 800103c:	887b      	ldrh	r3, [r7, #2]
 800103e:	4013      	ands	r3, r2
 8001040:	2b00      	cmp	r3, #0
 8001042:	d002      	beq.n	800104a <GPIO_ReadInputDataBit+0x22>
 8001044:	2301      	movs	r3, #1
 8001046:	73fb      	strb	r3, [r7, #15]
 8001048:	e001      	b.n	800104e <GPIO_ReadInputDataBit+0x26>
 800104a:	2300      	movs	r3, #0
 800104c:	73fb      	strb	r3, [r7, #15]
 800104e:	7bfb      	ldrb	r3, [r7, #15]
 8001050:	4618      	mov	r0, r3
 8001052:	3714      	adds	r7, #20
 8001054:	46bd      	mov	sp, r7
 8001056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800105a:	4770      	bx	lr

0800105c <GPIO_SetBits>:
 800105c:	b480      	push	{r7}
 800105e:	b083      	sub	sp, #12
 8001060:	af00      	add	r7, sp, #0
 8001062:	6078      	str	r0, [r7, #4]
 8001064:	460b      	mov	r3, r1
 8001066:	807b      	strh	r3, [r7, #2]
 8001068:	687b      	ldr	r3, [r7, #4]
 800106a:	887a      	ldrh	r2, [r7, #2]
 800106c:	831a      	strh	r2, [r3, #24]
 800106e:	bf00      	nop
 8001070:	370c      	adds	r7, #12
 8001072:	46bd      	mov	sp, r7
 8001074:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001078:	4770      	bx	lr

0800107a <GPIO_ResetBits>:
 800107a:	b480      	push	{r7}
 800107c:	b083      	sub	sp, #12
 800107e:	af00      	add	r7, sp, #0
 8001080:	6078      	str	r0, [r7, #4]
 8001082:	460b      	mov	r3, r1
 8001084:	807b      	strh	r3, [r7, #2]
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	887a      	ldrh	r2, [r7, #2]
 800108a:	835a      	strh	r2, [r3, #26]
 800108c:	bf00      	nop
 800108e:	370c      	adds	r7, #12
 8001090:	46bd      	mov	sp, r7
 8001092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001096:	4770      	bx	lr

08001098 <GPIO_WriteBit>:
 8001098:	b480      	push	{r7}
 800109a:	b083      	sub	sp, #12
 800109c:	af00      	add	r7, sp, #0
 800109e:	6078      	str	r0, [r7, #4]
 80010a0:	460b      	mov	r3, r1
 80010a2:	807b      	strh	r3, [r7, #2]
 80010a4:	4613      	mov	r3, r2
 80010a6:	707b      	strb	r3, [r7, #1]
 80010a8:	787b      	ldrb	r3, [r7, #1]
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	d003      	beq.n	80010b6 <GPIO_WriteBit+0x1e>
 80010ae:	687b      	ldr	r3, [r7, #4]
 80010b0:	887a      	ldrh	r2, [r7, #2]
 80010b2:	831a      	strh	r2, [r3, #24]
 80010b4:	e002      	b.n	80010bc <GPIO_WriteBit+0x24>
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	887a      	ldrh	r2, [r7, #2]
 80010ba:	835a      	strh	r2, [r3, #26]
 80010bc:	bf00      	nop
 80010be:	370c      	adds	r7, #12
 80010c0:	46bd      	mov	sp, r7
 80010c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c6:	4770      	bx	lr

080010c8 <RCC_AHB1PeriphClockCmd>:
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	6078      	str	r0, [r7, #4]
 80010d0:	460b      	mov	r3, r1
 80010d2:	70fb      	strb	r3, [r7, #3]
 80010d4:	78fb      	ldrb	r3, [r7, #3]
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d006      	beq.n	80010e8 <RCC_AHB1PeriphClockCmd+0x20>
 80010da:	4b0a      	ldr	r3, [pc, #40]	; (8001104 <RCC_AHB1PeriphClockCmd+0x3c>)
 80010dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80010de:	4909      	ldr	r1, [pc, #36]	; (8001104 <RCC_AHB1PeriphClockCmd+0x3c>)
 80010e0:	687b      	ldr	r3, [r7, #4]
 80010e2:	4313      	orrs	r3, r2
 80010e4:	630b      	str	r3, [r1, #48]	; 0x30
 80010e6:	e006      	b.n	80010f6 <RCC_AHB1PeriphClockCmd+0x2e>
 80010e8:	4b06      	ldr	r3, [pc, #24]	; (8001104 <RCC_AHB1PeriphClockCmd+0x3c>)
 80010ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80010ec:	687b      	ldr	r3, [r7, #4]
 80010ee:	43db      	mvns	r3, r3
 80010f0:	4904      	ldr	r1, [pc, #16]	; (8001104 <RCC_AHB1PeriphClockCmd+0x3c>)
 80010f2:	4013      	ands	r3, r2
 80010f4:	630b      	str	r3, [r1, #48]	; 0x30
 80010f6:	bf00      	nop
 80010f8:	370c      	adds	r7, #12
 80010fa:	46bd      	mov	sp, r7
 80010fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001100:	4770      	bx	lr
 8001102:	bf00      	nop
 8001104:	40023800 	.word	0x40023800

08001108 <RCC_APB2PeriphClockCmd>:
 8001108:	b480      	push	{r7}
 800110a:	b083      	sub	sp, #12
 800110c:	af00      	add	r7, sp, #0
 800110e:	6078      	str	r0, [r7, #4]
 8001110:	460b      	mov	r3, r1
 8001112:	70fb      	strb	r3, [r7, #3]
 8001114:	78fb      	ldrb	r3, [r7, #3]
 8001116:	2b00      	cmp	r3, #0
 8001118:	d006      	beq.n	8001128 <RCC_APB2PeriphClockCmd+0x20>
 800111a:	4b0a      	ldr	r3, [pc, #40]	; (8001144 <RCC_APB2PeriphClockCmd+0x3c>)
 800111c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800111e:	4909      	ldr	r1, [pc, #36]	; (8001144 <RCC_APB2PeriphClockCmd+0x3c>)
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	4313      	orrs	r3, r2
 8001124:	644b      	str	r3, [r1, #68]	; 0x44
 8001126:	e006      	b.n	8001136 <RCC_APB2PeriphClockCmd+0x2e>
 8001128:	4b06      	ldr	r3, [pc, #24]	; (8001144 <RCC_APB2PeriphClockCmd+0x3c>)
 800112a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	43db      	mvns	r3, r3
 8001130:	4904      	ldr	r1, [pc, #16]	; (8001144 <RCC_APB2PeriphClockCmd+0x3c>)
 8001132:	4013      	ands	r3, r2
 8001134:	644b      	str	r3, [r1, #68]	; 0x44
 8001136:	bf00      	nop
 8001138:	370c      	adds	r7, #12
 800113a:	46bd      	mov	sp, r7
 800113c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001140:	4770      	bx	lr
 8001142:	bf00      	nop
 8001144:	40023800 	.word	0x40023800

08001148 <SYSCFG_EXTILineConfig>:
 8001148:	b480      	push	{r7}
 800114a:	b085      	sub	sp, #20
 800114c:	af00      	add	r7, sp, #0
 800114e:	4603      	mov	r3, r0
 8001150:	460a      	mov	r2, r1
 8001152:	71fb      	strb	r3, [r7, #7]
 8001154:	4613      	mov	r3, r2
 8001156:	71bb      	strb	r3, [r7, #6]
 8001158:	2300      	movs	r3, #0
 800115a:	60fb      	str	r3, [r7, #12]
 800115c:	79bb      	ldrb	r3, [r7, #6]
 800115e:	f003 0303 	and.w	r3, r3, #3
 8001162:	009b      	lsls	r3, r3, #2
 8001164:	220f      	movs	r2, #15
 8001166:	fa02 f303 	lsl.w	r3, r2, r3
 800116a:	60fb      	str	r3, [r7, #12]
 800116c:	4a16      	ldr	r2, [pc, #88]	; (80011c8 <SYSCFG_EXTILineConfig+0x80>)
 800116e:	79bb      	ldrb	r3, [r7, #6]
 8001170:	089b      	lsrs	r3, r3, #2
 8001172:	b2db      	uxtb	r3, r3
 8001174:	3302      	adds	r3, #2
 8001176:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800117a:	68fb      	ldr	r3, [r7, #12]
 800117c:	43db      	mvns	r3, r3
 800117e:	4812      	ldr	r0, [pc, #72]	; (80011c8 <SYSCFG_EXTILineConfig+0x80>)
 8001180:	79b9      	ldrb	r1, [r7, #6]
 8001182:	0889      	lsrs	r1, r1, #2
 8001184:	b2c9      	uxtb	r1, r1
 8001186:	401a      	ands	r2, r3
 8001188:	1c8b      	adds	r3, r1, #2
 800118a:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800118e:	4a0e      	ldr	r2, [pc, #56]	; (80011c8 <SYSCFG_EXTILineConfig+0x80>)
 8001190:	79bb      	ldrb	r3, [r7, #6]
 8001192:	089b      	lsrs	r3, r3, #2
 8001194:	b2db      	uxtb	r3, r3
 8001196:	3302      	adds	r3, #2
 8001198:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800119c:	79f9      	ldrb	r1, [r7, #7]
 800119e:	79bb      	ldrb	r3, [r7, #6]
 80011a0:	f003 0303 	and.w	r3, r3, #3
 80011a4:	009b      	lsls	r3, r3, #2
 80011a6:	fa01 f303 	lsl.w	r3, r1, r3
 80011aa:	4807      	ldr	r0, [pc, #28]	; (80011c8 <SYSCFG_EXTILineConfig+0x80>)
 80011ac:	79b9      	ldrb	r1, [r7, #6]
 80011ae:	0889      	lsrs	r1, r1, #2
 80011b0:	b2c9      	uxtb	r1, r1
 80011b2:	431a      	orrs	r2, r3
 80011b4:	1c8b      	adds	r3, r1, #2
 80011b6:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 80011ba:	bf00      	nop
 80011bc:	3714      	adds	r7, #20
 80011be:	46bd      	mov	sp, r7
 80011c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011c4:	4770      	bx	lr
 80011c6:	bf00      	nop
 80011c8:	40013800 	.word	0x40013800

080011cc <__libc_init_array>:
 80011cc:	b570      	push	{r4, r5, r6, lr}
 80011ce:	4d0d      	ldr	r5, [pc, #52]	; (8001204 <__libc_init_array+0x38>)
 80011d0:	4c0d      	ldr	r4, [pc, #52]	; (8001208 <__libc_init_array+0x3c>)
 80011d2:	1b64      	subs	r4, r4, r5
 80011d4:	10a4      	asrs	r4, r4, #2
 80011d6:	2600      	movs	r6, #0
 80011d8:	42a6      	cmp	r6, r4
 80011da:	d109      	bne.n	80011f0 <__libc_init_array+0x24>
 80011dc:	4d0b      	ldr	r5, [pc, #44]	; (800120c <__libc_init_array+0x40>)
 80011de:	4c0c      	ldr	r4, [pc, #48]	; (8001210 <__libc_init_array+0x44>)
 80011e0:	f000 f818 	bl	8001214 <_init>
 80011e4:	1b64      	subs	r4, r4, r5
 80011e6:	10a4      	asrs	r4, r4, #2
 80011e8:	2600      	movs	r6, #0
 80011ea:	42a6      	cmp	r6, r4
 80011ec:	d105      	bne.n	80011fa <__libc_init_array+0x2e>
 80011ee:	bd70      	pop	{r4, r5, r6, pc}
 80011f0:	f855 3b04 	ldr.w	r3, [r5], #4
 80011f4:	4798      	blx	r3
 80011f6:	3601      	adds	r6, #1
 80011f8:	e7ee      	b.n	80011d8 <__libc_init_array+0xc>
 80011fa:	f855 3b04 	ldr.w	r3, [r5], #4
 80011fe:	4798      	blx	r3
 8001200:	3601      	adds	r6, #1
 8001202:	e7f2      	b.n	80011ea <__libc_init_array+0x1e>
 8001204:	0800125c 	.word	0x0800125c
 8001208:	0800125c 	.word	0x0800125c
 800120c:	0800125c 	.word	0x0800125c
 8001210:	08001260 	.word	0x08001260

08001214 <_init>:
 8001214:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001216:	bf00      	nop
 8001218:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800121a:	bc08      	pop	{r3}
 800121c:	469e      	mov	lr, r3
 800121e:	4770      	bx	lr

08001220 <_fini>:
 8001220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001222:	bf00      	nop
 8001224:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001226:	bc08      	pop	{r3}
 8001228:	469e      	mov	lr, r3
 800122a:	4770      	bx	lr
